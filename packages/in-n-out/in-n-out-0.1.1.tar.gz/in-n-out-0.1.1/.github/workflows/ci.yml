name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request: {}
  workflow_dispatch:

jobs:
  check-manifest:
    name: Check Manifest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - run: pip install check-manifest && check-manifest

  test:
    name: ${{ matrix.platform }} (${{ matrix.python-version }})
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        platform: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install setuptools tox tox-gh-actions

      - name: Test with tox
        run: python -m tox
        env:
          PLATFORM: ${{ matrix.platform }}

      - name: Coverage
        uses: codecov/codecov-action@v3

  test-compiled:
    name: ${{ matrix.platform }} (${{ matrix.python-version }}-compiled)
    runs-on: ${{ matrix.platform }}

    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        platform: ["ubuntu-latest"]
        include:
          # - platform: "windows-latest"
          #   python-version: "3.10"
          - platform: "macos-latest"
            python-version: "3.10"

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: install
        run: |
          python -m pip install -U wheel pip
          pip install -e .[test,build]
        env:
          SKIP_CYTHON: 1

      - name: compile
        run: |
          python setup.py build_ext --force --inplace --define CYTHON_TRACE
          python -c "import sys, in_n_out; print('compiled:', in_n_out._compiled); sys.exit(0 if in_n_out._compiled else 1)"

      - name: test
        run: pytest --color=yes --cov=in_n_out --cov-report=xml --cov-report=term-missing

      - name: remove compiled binaries
        run: |
          pip uninstall -y cython
          rm -rf src/in_n_out/*.so src/in_n_out/*.c src/in_n_out/__pycache__

      - name: test uncompiled
        run: pytest --color=yes --cov=in_n_out --cov-report=xml --cov-append

      - name: Coverage
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          verbose: true

  build:
    name: Build wheels on ${{ matrix.os }}
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Build wheels
        uses: pypa/cibuildwheel@2.7.0

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

      - name: Build sdist
        if: matrix.os == 'ubuntu-20.04'
        run: |
          python -m pip install build
          python -m build --sdist

      - uses: actions/upload-artifact@v3
        if: matrix.os == 'ubuntu-20.04'
        with:
          path: dist/*.tar.gz

  upload_pypi:
    name: Deploy
    needs: [check-manifest, build]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}

      - uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
