Metadata-Version: 2.1
Name: nka
Version: 1.0.2
Summary: An example package. Generated with cookiecutter-pylibrary.
Home-page: https://github.com/tobibias/neural-keyword-assignment
Author: Tobias HÃ¶fer
Author-email: tobias.hoefer.hm@gmail.com
License: MIT
Project-URL: Documentation, https://neural-keyword-assignment.readthedocs.io/
Project-URL: Changelog, https://neural-keyword-assignment.readthedocs.io/en/latest/changelog.html
Project-URL: Issue Tracker, https://github.com/tobibias/neural-keyword-assignment/issues
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: Unix
Classifier: Operating System :: POSIX
Classifier: Operating System :: Microsoft :: Windows
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Utilities
Requires-Python: >=3.6
License-File: LICENSE
License-File: AUTHORS.rst
Requires-Dist: torch (==1.9.0)
Requires-Dist: sentence-transformers (>=0.3.8)
Requires-Dist: spacy (>=3.0.1)
Requires-Dist: spacy-transformers
Requires-Dist: numpy (>=1.18.5)

========
Overview
========

Input Sequence Length
Transformer models like BERT / RoBERTa / DistilBERT etc. the runtime and the memory requirement grows quadratic with the input length. This limits transformers to inputs of certain lengths. A common value for BERT & Co. are 512 word pieces, which corresponde to about 300-400 words (for English). Longer texts than this are truncated to the first x word pieces.

By default, the provided methods use a limit fo 128 word pieces, longer inputs will be truncated. You can get and set the maximal sequence length like this:




An example package. Generated with cookiecutter-pylibrary.

* Free software: MIT license

Installation
============

::

    pip install nka

You can also install the in-development version with::

    pip install https://github.com/tobibias/neural-keyword-assignment/archive/main.zip


Documentation
=============


https://neural-keyword-assignment.readthedocs.io/


Development
===========

To run all the tests run::

    tox

Note, to combine the coverage data from all the tox environments run:

.. list-table::
    :widths: 10 90
    :stub-columns: 1

    - - Windows
      - ::

            set PYTEST_ADDOPTS=--cov-append
            tox

    - - Other
      - ::

            PYTEST_ADDOPTS=--cov-append tox


Changelog
=========

0.0.0 (2022-06-22)
------------------

* First release on PyPI.


