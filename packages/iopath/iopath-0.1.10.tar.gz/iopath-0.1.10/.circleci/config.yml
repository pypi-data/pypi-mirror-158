# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

# -------------------------------------------------------------------------------------
# Environments to run the jobs in
# -------------------------------------------------------------------------------------
cpu: &cpu
  docker:
    - image: circleci/python:3.7
  resource_class: medium

# -------------------------------------------------------------------------------------
# Re-usable commands
# -------------------------------------------------------------------------------------
setup_venv: &setup_venv
  - run:
      name: Setup Virtual Env
      working_directory: ~/
      command: |
        python -m venv ~/venv
        echo ". ~/venv/bin/activate" >> $BASH_ENV
        . ~/venv/bin/activate
        python --version
        which python
        which pip
        pip install --upgrade pip

install_dep: &install_dep
  - run:
      name: Install Dependencies
      command: |
        pip install --progress-bar off flake8 flake8-bugbear flake8-comprehensions isort==4.3.21 black==20.8b1

install_iopath: &install_iopath
  - run:
      environment:
        BUILD_NIGHTLY: 1
      name: Install iopath
      command: |
        pip install . -U
        python setup.py sdist
        python -c 'import iopath; print(iopath.__version__)'

run_unittests: &run_unittests
  - run:
      name: Run Unit Tests
      command: |
        python -m unittest discover -v -s tests

# -------------------------------------------------------------------------------------
# Jobs to run
# -------------------------------------------------------------------------------------
jobs:
  tests:
    <<: *cpu

    working_directory: ~/iopath

    steps:
      - checkout
      - <<: *setup_venv

      # Cache the venv directory that contains dependencies
      - restore_cache:
          keys:
            - cache-key-{{ .Branch }}-ID-20200130

      - <<: *install_dep

      - save_cache:
          paths:
            - ~/venv
          key: cache-key-{{ .Branch }}-ID-20200130

      - <<: *install_iopath

      - run:
          name: isort
          command: |
            isort -c -sp .
      - run:
          name: black
          command: |
            black --check .
      - run:
          name: flake8
          command: |
            flake8 --ignore=E203,E501,W503 .

      - <<: *run_unittests

      - store_artifacts:
          path: ~/iopath/dist
      - persist_to_workspace:
          root: ~/iopath/dist
          paths:
            - "*"

  build_conda_and_pip:
    docker:
      - image: continuumio/miniconda3
    steps:
      - checkout
      - run:
          name: Build Conda Package
          command: |
            # no commits in the last 25 hours
            if [[ -z $(git log --since="25 hours ago") ]]; then
              echo "No commits in the last day."
              exit 0
            fi
            conda install conda-build
            bash packaging/build_all_conda.sh
      - run:
          name: Build Pip Package
          command: |
            # no commits in the last 25 hours
            if [[ -z $(git log --since="25 hours ago") ]]; then
              echo "No commits in the last day."
              exit 0
            fi
            python setup.py bdist_wheel
      - store_artifacts:
          path: packaging/output_files
      - store_artifacts:
          path: dist

workflows:
  version: 2
  regular_test:
    jobs:
      - tests
      - build_conda_and_pip
