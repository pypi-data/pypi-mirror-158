{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "QueueMessage": {
      "type": "object",
      "properties": {
        "recordType": {
          "description": "Type of record",
          "enum": [
            "ARTIFACT_UPLOAD_REQUEST",
            "EXCEPTION_EVENT",
            "LOG_EVENT",
            "OPENTELEMETRY_DATA",
            "UTF_TEST_EVENT"
          ],
          "type": "string"
        },
        "recordSubType": {
          "description": "Subtype of record. Not all types have a subtype, but it is required when they have one.",
          "enum": [
            "BUILD_RESULT",
            "SESSION_START",
            "SESSION_STOP",
            "TEST_RESULT"
          ],
          "type": "string"
        },
        "tenantKey": {
          "description": "Unique string that identifies the app/group sending the message.\nForward looking to match the data lake infrastructure.",
          "type": "string"
        },
        "recordTimestamp": {
          "description": "UTC datetime.\nUse ISO-8601 format with time zone\n2022-03-10T18:50:05Z",
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/QueueRecord",
          "description": "Record Payload.\nThis is flexible to allow different fields for different record types and DB tables"
        }
      },
      "required": [
        "payload",
        "recordTimestamp",
        "recordType",
        "tenantKey"
      ]
    },
    "QueueMessageV1": {
      "type": "object",
      "properties": {
        "recordType": {
          "description": "Type of record",
          "enum": [
            "ARTIFACT_UPLOAD_REQUEST",
            "EXCEPTION_EVENT",
            "LOG_EVENT",
            "TEST_EVENT",
            "UTF_TEST_EVENT"
          ],
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/QueueRecord",
          "description": "Record Payload"
        },
        "timestamp": {
          "description": "UTC Timestamp\nGiven in seconds since epoch (unix time)",
          "type": "number"
        }
      },
      "required": [
        "payload",
        "recordType",
        "timestamp"
      ]
    },
    "QueueRecord": {
      "type": "object",
      "additionalProperties": {}
    },
    "TelemetryData": {
      "type": "object",
      "properties": {
        "dataType": {
          "enum": [
            "LOGS",
            "METRICS",
            "TRACES"
          ],
          "type": "string"
        },
        "base64ProtobufData": {
          "type": "string"
        },
        "compression": {
          "type": "string"
        }
      },
      "required": [
        "base64ProtobufData",
        "dataType"
      ]
    },
    "ArtifactUploadRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "metadata": {
          "anyOf": [
            {
              "$ref": "#/definitions/ArtifactMetadata"
            },
            {
              "$ref": "#/definitions/ArtifactBuildMetadata"
            }
          ]
        },
        "base64Content": {
          "type": "string"
        },
        "validateMetadata": {
          "type": "boolean"
        }
      },
      "required": [
        "base64Content",
        "extension",
        "metadata",
        "name",
        "validateMetadata"
      ]
    },
    "ArtifactMetadata": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "ArtifactBuildMetadata": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string"
        },
        "stack": {
          "type": "string"
        },
        "build_number": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "studio": {
          "type": "string"
        },
        "compiler": {
          "type": "string"
        },
        "app_name": {
          "type": "string"
        },
        "test_suite": {
          "type": "string"
        },
        "chip_id": {
          "type": "string"
        },
        "studio_build_version": {
          "type": "string"
        },
        "compiler_build_version": {
          "type": "string"
        }
      }
    },
    "SqaAppBuildResult": {
      "description": "Tied to the table: testdatabase.appBuildResults",
      "type": "object",
      "properties": {
        "releaseName": {
          "description": "Need table for validation created from the existing java enum",
          "type": "string"
        },
        "stackName": {
          "description": "Need table for validation created from the existing java enum",
          "type": "string"
        },
        "buildNum": {
          "description": "Comes from Jenkins",
          "type": "integer"
        },
        "suiteName": {
          "description": "Description of the grouping of applications",
          "type": "string"
        },
        "branchName": {
          "description": "GSDK Branch Name",
          "type": "string"
        },
        "appDescription": {
          "description": "Description of what the application does",
          "type": "string"
        },
        "resultType": {
          "description": "Need table for validation created from the existing java enum",
          "enum": [
            "BUILDAPP",
            "DBTEST",
            "FEATURE",
            "OTHER",
            "REGRESSION",
            "SMOKE"
          ],
          "type": "string"
        },
        "appName": {
          "description": "Name of the application",
          "type": "string"
        },
        "testExecutorName": {
          "description": "Where the application was built",
          "type": "string"
        },
        "moduleName": {
          "description": "Description of the device type that the application runs on",
          "type": "string"
        },
        "testResult": {
          "description": "Did the application build",
          "enum": [
            "blocked",
            "failed",
            "passed",
            "skipped"
          ],
          "type": "string"
        },
        "exceptionMsg": {
          "description": "Stack dump exception message from build",
          "type": "string"
        },
        "iotReqId": {
          "description": "JIRA IOT Req Number",
          "type": "string"
        },
        "toolChain": {
          "description": "Need table for validation.\nThis is the tool and version used to build the application with colon separation\niar:7.80.1",
          "type": "string"
        },
        "runNum": {
          "description": "Jenkins run number",
          "type": "integer"
        },
        "studioBuildNum": {
          "description": "Version of studio used to build the application",
          "type": "integer"
        },
        "studioUrl": {
          "description": "URL where studio was downloaded from\ni.e. Jenkins, Nexus, etc.",
          "type": "string"
        },
        "buildDurationSec": {
          "description": "Length of time to build the application\nGoes to the column testDuration",
          "type": "integer"
        }
      },
      "required": [
        "appName",
        "branchName",
        "buildDurationSec",
        "buildNum",
        "iotReqId",
        "moduleName",
        "releaseName",
        "resultType",
        "runNum",
        "stackName",
        "testExecutorName",
        "testResult",
        "toolChain"
      ]
    },
    "SqaTestResult": {
      "description": "Tied to the table: testdatabase.testResults_new",
      "type": "object",
      "properties": {
        "sessionPkId": {
          "description": "Logical FK to dbo.jobStatusTable.\nNot creating the constraint in case this comes in before the session record.",
          "type": "string"
        },
        "testCaseId": {
          "description": "Passed in from the test executor.\nFrom the test management system or git.",
          "type": "string"
        },
        "testSuiteName": {
          "description": "Named group of tests",
          "type": "string"
        },
        "testDescription": {
          "description": "What does the test case actually do",
          "type": "string"
        },
        "testResultType": {
          "description": "Need to create a table for verification of this field",
          "enum": [
            "buildapp",
            "compliance",
            "dbtest",
            "duration",
            "endurance",
            "feature",
            "na",
            "negative",
            "performance",
            "regression",
            "repeatability",
            "smoke",
            "soak",
            "system",
            "test"
          ],
          "type": "string"
        },
        "testCaseName": {
          "description": "Human readable version of the test case ID\nShort summary/description",
          "type": "string"
        },
        "testExecutorName": {
          "description": "Where the test actually ran",
          "type": "string"
        },
        "featureName": {
          "description": "Feature being tested by this test",
          "type": "string"
        },
        "testCreationDate": {
          "description": "Date the test was created\nISO-8601 format",
          "type": "string"
        },
        "testbedName": {
          "description": "Grouping of all of the hardware used to execute the test",
          "type": "string"
        },
        "moduleName": {
          "description": "Testbed component list",
          "type": "string"
        },
        "phyName": {
          "description": "Radio configuration used by the device",
          "type": "string"
        },
        "testResult": {
          "enum": [
            "block",
            "fail",
            "pass",
            "skip"
          ],
          "type": "string"
        },
        "testParametricData": {
          "description": "Test Parametric Data",
          "type": "string"
        },
        "engineerName": {
          "description": "Name of the engineer who created the test",
          "type": "string"
        },
        "exceptionMsg": {
          "description": "If an error occurs, this is the message returned.",
          "type": "string"
        },
        "iotReqId": {
          "type": "string"
        },
        "toolChain": {
          "description": "Need table for validation.\nThis is the tool and version used to build the application with colon separation\niar:7.80.1",
          "type": "string"
        },
        "vendorName": {
          "type": "string"
        },
        "vendorBuild": {
          "type": "string"
        },
        "vendorResult": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "portalWatch": {
          "description": "Change this to boolean - default false",
          "type": "string"
        },
        "testDurationSec": {
          "description": "Test duration in seconds",
          "type": "number"
        },
        "testCaseVersionNum": {
          "type": "integer"
        }
      },
      "required": [
        "featureName",
        "iotReqId",
        "moduleName",
        "sessionPkId",
        "testCaseId",
        "testCaseName",
        "testCreationDate",
        "testDurationSec",
        "testExecutorName",
        "testResult",
        "testResultType",
        "testbedName",
        "toolChain"
      ]
    },
    "SqaTestSession": {
      "description": "Tied to the table: dbo.jobStatusTable",
      "type": "object",
      "properties": {
        "sessionPkId": {
          "description": "UUID generated by the Jenkins client software",
          "type": "string"
        },
        "sessionStartTime": {
          "description": "ISO-8601 Datetime",
          "type": "string"
        },
        "sessionStopTime": {
          "description": "ISO-8601 datetime",
          "type": "string"
        },
        "jenkinsJobStatus": {
          "description": "Status of the Jenkins job",
          "enum": [
            "COMPLETE",
            "FAIL",
            "IN PROGRESS"
          ],
          "type": "string"
        },
        "sessionDurationSec": {
          "description": "Elapsed number of seconds for the Jenkins job.\nShould be close to stop time - start time.\nChange the data type in the DB to integer.",
          "type": "integer"
        },
        "jobType": {
          "description": "Type of Jenkins job",
          "enum": [
            "buildapp",
            "compliance",
            "dbtest",
            "duration",
            "endurance",
            "feature",
            "na",
            "negative",
            "performance",
            "regression",
            "repeatability",
            "smoke",
            "soak",
            "system",
            "test"
          ],
          "type": "string"
        },
        "releaseName": {
          "type": "string"
        },
        "branchName": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "sdkBuildNum": {
          "type": "integer"
        },
        "sdkUrl": {
          "type": "string"
        },
        "studioUrl": {
          "type": "string"
        },
        "totalTestCount": {
          "type": "integer"
        },
        "passCount": {
          "type": "integer"
        },
        "failCount": {
          "type": "integer"
        },
        "skipCount": {
          "type": "integer"
        },
        "jenkinsServerName": {
          "type": "string"
        },
        "jenkinsRunNum": {
          "type": "integer"
        },
        "jenkinsJobName": {
          "type": "string"
        },
        "jenkinsTestResultsUrl": {
          "type": "string"
        }
      },
      "required": [
        "branchName",
        "jenkinsJobName",
        "jenkinsJobStatus",
        "jenkinsRunNum",
        "jenkinsServerName",
        "jenkinsTestResultsUrl",
        "releaseName",
        "sdkBuildNum",
        "sessionPkId",
        "sessionStartTime",
        "stackName"
      ]
    },
    "LogEvent": {
      "type": "object"
    },
    "ExceptionEvent": {
      "type": "object"
    }
  }
}