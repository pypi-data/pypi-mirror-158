[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "kraken-std"
version = "0.1.4"
description = "The Kraken standard library."
authors = ["Niklas Rosenstein <rosensteinniklas@gmail.com>"]
license = "MIT"
readme = "readme.md"
packages = [{ include = "kraken/std", from = "src" }]
classifiers = []
keywords = []

[tool.poetry.urls]
# "Bug Tracker" = ""
# Documentation = ""
# Homepage = ""
# Repository = ""

[tool.poetry.dependencies]
python = "^3.7"
kraken-core = "^0.2.0"
httpx = "^0.23.0"

[tool.poetry.dev-dependencies]
black = "*"
flake8 = "*"
isort = "*"
mypy = "*"
pytest = "*"

[tool.slap]
typed = true

[tool.slap.test]
check = "slap check"
mypy = "dmypy run src/ examples/"
pytest = "pytest tests/ -vv"
pytest-ete = "pytest tests-ete/ -vv --log-cli-level INFO"
black = "black --check src/ examples/ tests/"
isort = "isort --check-only src/ examples/ tests/"
flake8 = "flake8 src/ examples/ tests/"

[tool.slap.run]
fmt = "black src/ examples/ tests/ && isort src/ examples/ tests/"

[tool.mypy]
python_version = "3.7"
explicit_package_bases = true
mypy_path = ["src"]
namespace_packages = true
pretty = true
show_error_codes = true
show_error_context = true
strict = true
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_ignores = true

[tool.isort]
profile = "black"
line_length = 120
combine_as_imports = true

[tool.black]
line-length = 120
