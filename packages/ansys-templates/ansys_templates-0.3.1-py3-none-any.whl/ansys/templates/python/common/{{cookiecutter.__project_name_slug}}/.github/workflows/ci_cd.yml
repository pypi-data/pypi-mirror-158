name: GitHub CI
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  MAIN_PYTHON_VERSION: '{{ cookiecutter.__requires_python }}'

concurrency:
  group: {{ '${{ github.workflow }}-${{ github.ref }}' }}
  cancel-in-progress: true

jobs:

  style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: {{ '${{ env.MAIN_PYTHON_VERSION }}' }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip {{ cookiecutter.__build_system }} tox
      - name: Test with tox
        run: tox -e style

  docs-style:
    name: Documentation Style Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
  
      - name: Running Vale
        uses: errata-ai/vale-action@reviewdog
        env:
          GITHUB_TOKEN: {{ '${{secrets.GITHUB_TOKEN}}' }}
        with:
          files: doc
          reporter: github-pr-check
          level: error
          filter_mode: nofilter
          fail_on_error: true
          vale_flags: "--config=doc/.vale.ini"

  tests:
    name: Tests and coverage
    runs-on: {{ '${{ matrix.os }}' }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        {% set required_minor = cookiecutter.__requires_python[2:] | int %}
        {%- set python_versions = [ ] -%}
        {%- for minor in range(7, 11) -%}
        {%- if minor >= required_minor -%}
        {{ python_versions.append("3." + minor | string ) or ''}}
        {%- endif -%}
        {%- endfor -%}
        python-version: {{ python_versions }}
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python {{ '${{ matrix.python-version }}' }}
        uses: actions/setup-python@v4
        with:
          python-version: {{ '${{ matrix.python-version }}' }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip {{ cookiecutter.__build_system }} tox tox-gh-actions
      - name: Test with tox
        # Only the tox environment specified in the tox.ini gh-actions is run
        run: tox


  docs:
    name: Documentation
    runs-on: ubuntu-latest
    needs: docs-style
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: {{ '${{ env.MAIN_PYTHON_VERSION }}' }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip {{ cookiecutter.__build_system }} tox
      - name: Generate the documentation with tox
        run: tox -e doc


  build:
    name: Build library
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: {{ '${{ env.MAIN_PYTHON_VERSION }}' }}
      - name: Install dependencies and build the library
        run: |
          python -m pip install --upgrade pip {{ cookiecutter.__build_system }}
          python -m pip install -r requirements/requirements_build.txt
          {% if cookiecutter.__build_system in ["flit", "poetry"] -%}
          {{ cookiecutter.__build_system }} build
          {% elif cookiecutter.__build_system == "setuptools" -%}
          python -m build
          {% endif -%}
          python -m twine check dist/*
