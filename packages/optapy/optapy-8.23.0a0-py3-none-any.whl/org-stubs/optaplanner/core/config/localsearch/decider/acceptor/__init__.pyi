import java.lang
import java.util
import java.util.function
import org.optaplanner.core.config
import org.optaplanner.core.config.localsearch.decider.acceptor.stepcountinghillclimbing
import typing



class AcceptorType(java.lang.Enum['AcceptorType']):
    """
    public enum AcceptorType extends :class:`~org.optaplanner.core.config.localsearch.decider.acceptor.https:.docs.oracle.com.javase.8.docs.api.java.lang.Enum?is`<:class:`~org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorType`>
    """
    HILL_CLIMBING: typing.ClassVar['AcceptorType'] = ...
    ENTITY_TABU: typing.ClassVar['AcceptorType'] = ...
    VALUE_TABU: typing.ClassVar['AcceptorType'] = ...
    MOVE_TABU: typing.ClassVar['AcceptorType'] = ...
    UNDO_MOVE_TABU: typing.ClassVar['AcceptorType'] = ...
    SIMULATED_ANNEALING: typing.ClassVar['AcceptorType'] = ...
    LATE_ACCEPTANCE: typing.ClassVar['AcceptorType'] = ...
    GREAT_DELUGE: typing.ClassVar['AcceptorType'] = ...
    STEP_COUNTING_HILL_CLIMBING: typing.ClassVar['AcceptorType'] = ...
    _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
    @typing.overload
    @staticmethod
    def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
    @typing.overload
    @staticmethod
    def valueOf(string: str) -> 'AcceptorType':
        """
            Returns the enum constant of this type with the specified name. The string must match *exactly* an identifier used to
            declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)
        
            Parameters:
                name (:class:`~org.optaplanner.core.config.localsearch.decider.acceptor.https:.docs.oracle.com.javase.8.docs.api.java.lang.String?is`): the name of the enum constant to be returned.
        
            Returns:
                the enum constant with the specified name
        
            Raises:
                :class:`~org.optaplanner.core.config.localsearch.decider.acceptor.https:.docs.oracle.com.javase.8.docs.api.java.lang.IllegalArgumentException?is`: if this enum type has no constant with the specified name
                :class:`~org.optaplanner.core.config.localsearch.decider.acceptor.https:.docs.oracle.com.javase.8.docs.api.java.lang.NullPointerException?is`: if the argument is null
        
        
        """
        ...
    @staticmethod
    def values() -> typing.List['AcceptorType']:
        """
            Returns an array containing the constants of this enum type, in the order they are declared. This method may be used to
            iterate over the constants as follows:
        
            .. code-block: java
            
            for (AcceptorType c : AcceptorType.values())
                System.out.println(c);
            
        
            Returns:
                an array containing the constants of this enum type, in the order they are declared
        
        
        """
        ...

class LocalSearchAcceptorConfig(org.optaplanner.core.config.AbstractConfig['LocalSearchAcceptorConfig']):
    """
    public class LocalSearchAcceptorConfig extends :class:`~org.optaplanner.core.config.AbstractConfig`<:class:`~org.optaplanner.core.config.localsearch.decider.acceptor.LocalSearchAcceptorConfig`>
    """
    def __init__(self): ...
    def copyConfig(self) -> 'LocalSearchAcceptorConfig':
        """
            Description copied from class: :meth:`~org.optaplanner.core.config.AbstractConfig.copyConfig`
            Typically implemented by constructing a new instance and calling
            :meth:`~org.optaplanner.core.config.AbstractConfig.inherit` on it
        
            Specified by:
                :meth:`~org.optaplanner.core.config.AbstractConfig.copyConfig` in
                class :class:`~org.optaplanner.core.config.AbstractConfig`
        
            Returns:
                new instance
        
        
        """
        ...
    def getAcceptorTypeList(self) -> java.util.List[AcceptorType]: ...
    def getEntityTabuRatio(self) -> float: ...
    def getEntityTabuSize(self) -> int: ...
    def getFadingEntityTabuRatio(self) -> float: ...
    def getFadingEntityTabuSize(self) -> int: ...
    def getFadingMoveTabuSize(self) -> int: ...
    def getFadingUndoMoveTabuSize(self) -> int: ...
    def getFadingValueTabuRatio(self) -> float: ...
    def getFadingValueTabuSize(self) -> int: ...
    def getGreatDelugeWaterLevelIncrementRatio(self) -> float: ...
    def getGreatDelugeWaterLevelIncrementScore(self) -> str: ...
    def getLateAcceptanceSize(self) -> int: ...
    def getMoveTabuSize(self) -> int: ...
    def getSimulatedAnnealingStartingTemperature(self) -> str: ...
    def getStepCountingHillClimbingSize(self) -> int: ...
    def getStepCountingHillClimbingType(self) -> org.optaplanner.core.config.localsearch.decider.acceptor.stepcountinghillclimbing.StepCountingHillClimbingType: ...
    def getUndoMoveTabuSize(self) -> int: ...
    def getValueTabuRatio(self) -> float: ...
    def getValueTabuSize(self) -> int: ...
    def inherit(self, localSearchAcceptorConfig: 'LocalSearchAcceptorConfig') -> 'LocalSearchAcceptorConfig':
        """
            Description copied from class: :meth:`~org.optaplanner.core.config.AbstractConfig.inherit`
            Inherits each property of the :code:`inheritedConfig` unless that property (or a semantic alternative) is defined by
            this instance (which overwrites the inherited behaviour).
        
            After the inheritance, if a property on this :class:`~org.optaplanner.core.config.AbstractConfig` composition is
            replaced, it should not affect the inherited composition instance.
        
            Specified by:
                :meth:`~org.optaplanner.core.config.AbstractConfig.inherit` in
                class :class:`~org.optaplanner.core.config.AbstractConfig`
        
            Parameters:
                inheritedConfig (:class:`~org.optaplanner.core.config.localsearch.decider.acceptor.LocalSearchAcceptorConfig`): never null
        
            Returns:
                this
        
        
        """
        ...
    def setAcceptorTypeList(self, list: java.util.List[AcceptorType]) -> None: ...
    def setEntityTabuRatio(self, double: float) -> None: ...
    def setEntityTabuSize(self, integer: int) -> None: ...
    def setFadingEntityTabuRatio(self, double: float) -> None: ...
    def setFadingEntityTabuSize(self, integer: int) -> None: ...
    def setFadingMoveTabuSize(self, integer: int) -> None: ...
    def setFadingUndoMoveTabuSize(self, integer: int) -> None: ...
    def setFadingValueTabuRatio(self, double: float) -> None: ...
    def setFadingValueTabuSize(self, integer: int) -> None: ...
    def setGreatDelugeWaterLevelIncrementRatio(self, double: float) -> None: ...
    def setGreatDelugeWaterLevelIncrementScore(self, string: str) -> None: ...
    def setLateAcceptanceSize(self, integer: int) -> None: ...
    def setMoveTabuSize(self, integer: int) -> None: ...
    def setSimulatedAnnealingStartingTemperature(self, string: str) -> None: ...
    def setStepCountingHillClimbingSize(self, integer: int) -> None: ...
    def setStepCountingHillClimbingType(self, stepCountingHillClimbingType: org.optaplanner.core.config.localsearch.decider.acceptor.stepcountinghillclimbing.StepCountingHillClimbingType) -> None: ...
    def setUndoMoveTabuSize(self, integer: int) -> None: ...
    def setValueTabuRatio(self, double: float) -> None: ...
    def setValueTabuSize(self, integer: int) -> None: ...
    def visitReferencedClasses(self, consumer: typing.Union[java.util.function.Consumer[typing.Type[typing.Any]], typing.Callable[[typing.Type[typing.Any]], None]]) -> None: ...
    def withAcceptorTypeList(self, list: java.util.List[AcceptorType]) -> 'LocalSearchAcceptorConfig': ...
    def withEntityTabuRatio(self, double: float) -> 'LocalSearchAcceptorConfig': ...
    def withEntityTabuSize(self, integer: int) -> 'LocalSearchAcceptorConfig': ...
    def withFadingEntityTabuRatio(self, double: float) -> 'LocalSearchAcceptorConfig': ...
    def withFadingEntityTabuSize(self, integer: int) -> 'LocalSearchAcceptorConfig': ...
    def withFadingMoveTabuSize(self, integer: int) -> 'LocalSearchAcceptorConfig': ...
    def withFadingUndoMoveTabuSize(self, integer: int) -> 'LocalSearchAcceptorConfig': ...
    def withFadingValueTabuRatio(self, double: float) -> 'LocalSearchAcceptorConfig': ...
    def withFadingValueTabuSize(self, integer: int) -> 'LocalSearchAcceptorConfig': ...
    def withLateAcceptanceSize(self, integer: int) -> 'LocalSearchAcceptorConfig': ...
    def withMoveTabuSize(self, integer: int) -> 'LocalSearchAcceptorConfig': ...
    def withSimulatedAnnealingStartingTemperature(self, string: str) -> 'LocalSearchAcceptorConfig': ...
    def withStepCountingHillClimbingSize(self, integer: int) -> 'LocalSearchAcceptorConfig': ...
    def withStepCountingHillClimbingType(self, stepCountingHillClimbingType: org.optaplanner.core.config.localsearch.decider.acceptor.stepcountinghillclimbing.StepCountingHillClimbingType) -> 'LocalSearchAcceptorConfig': ...
    def withUndoMoveTabuSize(self, integer: int) -> 'LocalSearchAcceptorConfig': ...
    def withValueTabuRatio(self, double: float) -> 'LocalSearchAcceptorConfig': ...
    def withValueTabuSize(self, integer: int) -> 'LocalSearchAcceptorConfig': ...


class __module_protocol__(typing.Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.optaplanner.core.config.localsearch.decider.acceptor")``.

    AcceptorType: typing.Type[AcceptorType]
    LocalSearchAcceptorConfig: typing.Type[LocalSearchAcceptorConfig]
    stepcountinghillclimbing: org.optaplanner.core.config.localsearch.decider.acceptor.stepcountinghillclimbing.__module_protocol__
