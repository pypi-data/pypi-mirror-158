Metadata-Version: 2.1
Name: great-ai
Version: 0.1.0
Summary: GreatAI
Keywords: SE4ML,MLOps,AI engineering,general,robust,end-to-end,automated,trustworthy,ai,deployment
Author-email: Andr√°s Schmelczer <andras@schmelczer.dev>
Requires-Python: >= 3.8
Description-Content-Type: text/markdown
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Requires-Dist: scikit-learn
Requires-Dist: matplotlib
Requires-Dist: numpy
Requires-Dist: nbconvert
Requires-Dist: ipython
Requires-Dist: unidecode >= 1.3.0
Requires-Dist: syntok >= 1.4.0
Requires-Dist: langcodes[data] >= 3.3.0
Requires-Dist: langdetect >= 1.0.9
Requires-Dist: tinydb >= 4.7.0
Requires-Dist: boto3 >= 1.23.0
Requires-Dist: plotly >= 5.8.0
Requires-Dist: pandas
Requires-Dist: dash >= 2.4.0
Requires-Dist: fastapi >= 0.70.0
Requires-Dist: uvicorn[standard] >= 0.18.0
Requires-Dist: watchdog >= 2.1.0
Requires-Dist: typeguard >= 2.10.0
Requires-Dist: pymongo >= 4.0.0
Requires-Dist: dill >= 0.3.5.0
Requires-Dist: tqdm
Requires-Dist: async_lru >= 1.0.0
Requires-Dist: httpx >= 0.20.0
Requires-Dist: flit ; extra == "dev"
Requires-Dist: mkdocs ; extra == "dev"
Requires-Dist: mkdocstrings[python] ; extra == "dev"
Requires-Dist: mkdocs-material ; extra == "dev"
Requires-Dist: mkdocs-jupyter ; extra == "dev"
Requires-Dist: mkdocs-git-revision-date-localized-plugin ; extra == "dev"
Requires-Dist: autoflake ; extra == "dev"
Requires-Dist: isort ; extra == "dev"
Requires-Dist: black[jupyter] ; extra == "dev"
Requires-Dist: mypy ; extra == "dev"
Requires-Dist: flake8 ; extra == "dev"
Requires-Dist: pytest ; extra == "dev"
Requires-Dist: pytest-cov ; extra == "dev"
Requires-Dist: pytest-subtests ; extra == "dev"
Requires-Dist: pytest-asyncio ; extra == "dev"
Project-URL: DockerHub, https://hub.docker.com/repository/docker/schmelczera/great-ai
Project-URL: Homepage, https://github.com/schmelczer/great-ai
Provides-Extra: dev

# GreatAI

**work in progress, do not use!**

[![Test](https://github.com/schmelczer/great-ai/actions/workflows/test.yml/badge.svg)](https://github.com/schmelczer/great-ai/actions/workflows/check.yml)
[![Quality Gate Status](https://sonar.scoutinscience.com/api/project_badges/measure?project=great-ai&metric=alert_status)](https://sonar.schmelczer.com/dashboard?id=great-ai)
[![Publish on PyPI](https://github.com/schmelczer/great-ai/actions/workflows/publish.yaml/badge.svg)](https://github.com/schmelczer/great-ai/actions/workflows/publish.yaml)
[![Publish on DockerHub](https://github.com/schmelczer/great-ai/actions/workflows/docker.yaml/badge.svg)](https://github.com/schmelczer/great-ai/actions/workflows/docker.yaml)
[![Downloads](https://pepy.tech/badge/great-ai/month)](https://pepy.tech/project/great-ai)


## Find `great-ai` on [DockerHub](https://hub.docker.com/repository/docker/schmelczera/great-ai)

```sh
docker run -p6060:6060 schmelczera/great-ai
```

Find the dashboard at [http://localhost:6060](http://localhost:6060/dashboard/).


## Find `great-ai` on [PyPI](https://pypi.org/project/great-ai/)

```sh
pip install great-ai
```

```python
from great_ai import GreatAI

@GreatAI.create
def hello_world(name: str) -> str:
    return f"Hello {name}!"
```
> Create a new file called `main.py`

Deploy by executing `python3 -m great-ai main.py`
> Or: `python3 -m great-ai main.py`

Find the dashboard at [http://localhost:6060](http://localhost:6060/dashboard/).

### Contribute


#### Install

```sh
python3 -m venv --copies .env
source .env/bin/activate
python3 -m pip install flit
python3 -m flit install --symlink --deps=all
```

#### Documentation

```sh
mkdocs serve --dirtyreload
```
