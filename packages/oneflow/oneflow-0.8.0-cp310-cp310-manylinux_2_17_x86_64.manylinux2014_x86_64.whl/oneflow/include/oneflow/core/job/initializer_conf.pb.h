// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/job/initializer_conf.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[14]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto;
namespace oneflow {
class ConstantInitializerConf;
class ConstantInitializerConfDefaultTypeInternal;
extern ConstantInitializerConfDefaultTypeInternal _ConstantInitializerConf_default_instance_;
class ConstantIntInitializerConf;
class ConstantIntInitializerConfDefaultTypeInternal;
extern ConstantIntInitializerConfDefaultTypeInternal _ConstantIntInitializerConf_default_instance_;
class EmptyInitializerConf;
class EmptyInitializerConfDefaultTypeInternal;
extern EmptyInitializerConfDefaultTypeInternal _EmptyInitializerConf_default_instance_;
class InitializeWithSnapshotConf;
class InitializeWithSnapshotConfDefaultTypeInternal;
extern InitializeWithSnapshotConfDefaultTypeInternal _InitializeWithSnapshotConf_default_instance_;
class InitializerConf;
class InitializerConfDefaultTypeInternal;
extern InitializerConfDefaultTypeInternal _InitializerConf_default_instance_;
class IntRangeInitializerConf;
class IntRangeInitializerConfDefaultTypeInternal;
extern IntRangeInitializerConfDefaultTypeInternal _IntRangeInitializerConf_default_instance_;
class MsraInitializerConf;
class MsraInitializerConfDefaultTypeInternal;
extern MsraInitializerConfDefaultTypeInternal _MsraInitializerConf_default_instance_;
class RandomNormalInitializerConf;
class RandomNormalInitializerConfDefaultTypeInternal;
extern RandomNormalInitializerConfDefaultTypeInternal _RandomNormalInitializerConf_default_instance_;
class RandomUniformInitializerConf;
class RandomUniformInitializerConfDefaultTypeInternal;
extern RandomUniformInitializerConfDefaultTypeInternal _RandomUniformInitializerConf_default_instance_;
class RandomUniformIntInitializerConf;
class RandomUniformIntInitializerConfDefaultTypeInternal;
extern RandomUniformIntInitializerConfDefaultTypeInternal _RandomUniformIntInitializerConf_default_instance_;
class RangeInitializerConf;
class RangeInitializerConfDefaultTypeInternal;
extern RangeInitializerConfDefaultTypeInternal _RangeInitializerConf_default_instance_;
class TruncatedNormalInitializerConf;
class TruncatedNormalInitializerConfDefaultTypeInternal;
extern TruncatedNormalInitializerConfDefaultTypeInternal _TruncatedNormalInitializerConf_default_instance_;
class VarianceScalingInitializerConf;
class VarianceScalingInitializerConfDefaultTypeInternal;
extern VarianceScalingInitializerConfDefaultTypeInternal _VarianceScalingInitializerConf_default_instance_;
class XavierInitializerConf;
class XavierInitializerConfDefaultTypeInternal;
extern XavierInitializerConfDefaultTypeInternal _XavierInitializerConf_default_instance_;
}  // namespace oneflow
PROTOBUF_NAMESPACE_OPEN
template<> ::oneflow::ConstantInitializerConf* Arena::CreateMaybeMessage<::oneflow::ConstantInitializerConf>(Arena*);
template<> ::oneflow::ConstantIntInitializerConf* Arena::CreateMaybeMessage<::oneflow::ConstantIntInitializerConf>(Arena*);
template<> ::oneflow::EmptyInitializerConf* Arena::CreateMaybeMessage<::oneflow::EmptyInitializerConf>(Arena*);
template<> ::oneflow::InitializeWithSnapshotConf* Arena::CreateMaybeMessage<::oneflow::InitializeWithSnapshotConf>(Arena*);
template<> ::oneflow::InitializerConf* Arena::CreateMaybeMessage<::oneflow::InitializerConf>(Arena*);
template<> ::oneflow::IntRangeInitializerConf* Arena::CreateMaybeMessage<::oneflow::IntRangeInitializerConf>(Arena*);
template<> ::oneflow::MsraInitializerConf* Arena::CreateMaybeMessage<::oneflow::MsraInitializerConf>(Arena*);
template<> ::oneflow::RandomNormalInitializerConf* Arena::CreateMaybeMessage<::oneflow::RandomNormalInitializerConf>(Arena*);
template<> ::oneflow::RandomUniformInitializerConf* Arena::CreateMaybeMessage<::oneflow::RandomUniformInitializerConf>(Arena*);
template<> ::oneflow::RandomUniformIntInitializerConf* Arena::CreateMaybeMessage<::oneflow::RandomUniformIntInitializerConf>(Arena*);
template<> ::oneflow::RangeInitializerConf* Arena::CreateMaybeMessage<::oneflow::RangeInitializerConf>(Arena*);
template<> ::oneflow::TruncatedNormalInitializerConf* Arena::CreateMaybeMessage<::oneflow::TruncatedNormalInitializerConf>(Arena*);
template<> ::oneflow::VarianceScalingInitializerConf* Arena::CreateMaybeMessage<::oneflow::VarianceScalingInitializerConf>(Arena*);
template<> ::oneflow::XavierInitializerConf* Arena::CreateMaybeMessage<::oneflow::XavierInitializerConf>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace oneflow {

enum VarianceNorm : int {
  kFanIn = 0,
  kFanOut = 1,
  kAverage = 2
};
bool VarianceNorm_IsValid(int value);
constexpr VarianceNorm VarianceNorm_MIN = kFanIn;
constexpr VarianceNorm VarianceNorm_MAX = kAverage;
constexpr int VarianceNorm_ARRAYSIZE = VarianceNorm_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* VarianceNorm_descriptor();
template<typename T>
inline const std::string& VarianceNorm_Name(T enum_t_value) {
  static_assert(::std::is_same<T, VarianceNorm>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function VarianceNorm_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    VarianceNorm_descriptor(), enum_t_value);
}
inline bool VarianceNorm_Parse(
    const std::string& name, VarianceNorm* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<VarianceNorm>(
    VarianceNorm_descriptor(), name, value);
}
enum RandomDistribution : int {
  kRandomUniform = 0,
  kRandomNormal = 1,
  kTruncatedNormal = 2
};
bool RandomDistribution_IsValid(int value);
constexpr RandomDistribution RandomDistribution_MIN = kRandomUniform;
constexpr RandomDistribution RandomDistribution_MAX = kTruncatedNormal;
constexpr int RandomDistribution_ARRAYSIZE = RandomDistribution_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RandomDistribution_descriptor();
template<typename T>
inline const std::string& RandomDistribution_Name(T enum_t_value) {
  static_assert(::std::is_same<T, RandomDistribution>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function RandomDistribution_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    RandomDistribution_descriptor(), enum_t_value);
}
inline bool RandomDistribution_Parse(
    const std::string& name, RandomDistribution* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<RandomDistribution>(
    RandomDistribution_descriptor(), name, value);
}
// ===================================================================

class ConstantInitializerConf :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.ConstantInitializerConf) */ {
 public:
  ConstantInitializerConf();
  virtual ~ConstantInitializerConf();

  ConstantInitializerConf(const ConstantInitializerConf& from);
  ConstantInitializerConf(ConstantInitializerConf&& from) noexcept
    : ConstantInitializerConf() {
    *this = ::std::move(from);
  }

  inline ConstantInitializerConf& operator=(const ConstantInitializerConf& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConstantInitializerConf& operator=(ConstantInitializerConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ConstantInitializerConf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConstantInitializerConf* internal_default_instance() {
    return reinterpret_cast<const ConstantInitializerConf*>(
               &_ConstantInitializerConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ConstantInitializerConf& a, ConstantInitializerConf& b) {
    a.Swap(&b);
  }
  inline void Swap(ConstantInitializerConf* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ConstantInitializerConf* New() const final {
    return CreateMaybeMessage<ConstantInitializerConf>(nullptr);
  }

  ConstantInitializerConf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ConstantInitializerConf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ConstantInitializerConf& from);
  void MergeFrom(const ConstantInitializerConf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConstantInitializerConf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.ConstantInitializerConf";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // optional float value = 1 [default = 0];
  bool has_value() const;
  void clear_value();
  float value() const;
  void set_value(float value);

  // @@protoc_insertion_point(class_scope:oneflow.ConstantInitializerConf)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float value_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto;
};
// -------------------------------------------------------------------

class ConstantIntInitializerConf :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.ConstantIntInitializerConf) */ {
 public:
  ConstantIntInitializerConf();
  virtual ~ConstantIntInitializerConf();

  ConstantIntInitializerConf(const ConstantIntInitializerConf& from);
  ConstantIntInitializerConf(ConstantIntInitializerConf&& from) noexcept
    : ConstantIntInitializerConf() {
    *this = ::std::move(from);
  }

  inline ConstantIntInitializerConf& operator=(const ConstantIntInitializerConf& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConstantIntInitializerConf& operator=(ConstantIntInitializerConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ConstantIntInitializerConf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConstantIntInitializerConf* internal_default_instance() {
    return reinterpret_cast<const ConstantIntInitializerConf*>(
               &_ConstantIntInitializerConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ConstantIntInitializerConf& a, ConstantIntInitializerConf& b) {
    a.Swap(&b);
  }
  inline void Swap(ConstantIntInitializerConf* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ConstantIntInitializerConf* New() const final {
    return CreateMaybeMessage<ConstantIntInitializerConf>(nullptr);
  }

  ConstantIntInitializerConf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ConstantIntInitializerConf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ConstantIntInitializerConf& from);
  void MergeFrom(const ConstantIntInitializerConf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConstantIntInitializerConf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.ConstantIntInitializerConf";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // optional int64 value = 1 [default = 0];
  bool has_value() const;
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int64 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:oneflow.ConstantIntInitializerConf)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 value_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto;
};
// -------------------------------------------------------------------

class RandomUniformInitializerConf :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.RandomUniformInitializerConf) */ {
 public:
  RandomUniformInitializerConf();
  virtual ~RandomUniformInitializerConf();

  RandomUniformInitializerConf(const RandomUniformInitializerConf& from);
  RandomUniformInitializerConf(RandomUniformInitializerConf&& from) noexcept
    : RandomUniformInitializerConf() {
    *this = ::std::move(from);
  }

  inline RandomUniformInitializerConf& operator=(const RandomUniformInitializerConf& from) {
    CopyFrom(from);
    return *this;
  }
  inline RandomUniformInitializerConf& operator=(RandomUniformInitializerConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RandomUniformInitializerConf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RandomUniformInitializerConf* internal_default_instance() {
    return reinterpret_cast<const RandomUniformInitializerConf*>(
               &_RandomUniformInitializerConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(RandomUniformInitializerConf& a, RandomUniformInitializerConf& b) {
    a.Swap(&b);
  }
  inline void Swap(RandomUniformInitializerConf* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RandomUniformInitializerConf* New() const final {
    return CreateMaybeMessage<RandomUniformInitializerConf>(nullptr);
  }

  RandomUniformInitializerConf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RandomUniformInitializerConf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RandomUniformInitializerConf& from);
  void MergeFrom(const RandomUniformInitializerConf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RandomUniformInitializerConf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.RandomUniformInitializerConf";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMinFieldNumber = 1,
    kMaxFieldNumber = 2,
  };
  // optional float min = 1 [default = 0];
  bool has_min() const;
  void clear_min();
  float min() const;
  void set_min(float value);

  // optional float max = 2 [default = 1];
  bool has_max() const;
  void clear_max();
  float max() const;
  void set_max(float value);

  // @@protoc_insertion_point(class_scope:oneflow.RandomUniformInitializerConf)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float min_;
  float max_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto;
};
// -------------------------------------------------------------------

class RandomUniformIntInitializerConf :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.RandomUniformIntInitializerConf) */ {
 public:
  RandomUniformIntInitializerConf();
  virtual ~RandomUniformIntInitializerConf();

  RandomUniformIntInitializerConf(const RandomUniformIntInitializerConf& from);
  RandomUniformIntInitializerConf(RandomUniformIntInitializerConf&& from) noexcept
    : RandomUniformIntInitializerConf() {
    *this = ::std::move(from);
  }

  inline RandomUniformIntInitializerConf& operator=(const RandomUniformIntInitializerConf& from) {
    CopyFrom(from);
    return *this;
  }
  inline RandomUniformIntInitializerConf& operator=(RandomUniformIntInitializerConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RandomUniformIntInitializerConf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RandomUniformIntInitializerConf* internal_default_instance() {
    return reinterpret_cast<const RandomUniformIntInitializerConf*>(
               &_RandomUniformIntInitializerConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(RandomUniformIntInitializerConf& a, RandomUniformIntInitializerConf& b) {
    a.Swap(&b);
  }
  inline void Swap(RandomUniformIntInitializerConf* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RandomUniformIntInitializerConf* New() const final {
    return CreateMaybeMessage<RandomUniformIntInitializerConf>(nullptr);
  }

  RandomUniformIntInitializerConf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RandomUniformIntInitializerConf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RandomUniformIntInitializerConf& from);
  void MergeFrom(const RandomUniformIntInitializerConf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RandomUniformIntInitializerConf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.RandomUniformIntInitializerConf";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMinFieldNumber = 1,
    kMaxFieldNumber = 2,
  };
  // optional int32 min = 1 [default = 0];
  bool has_min() const;
  void clear_min();
  ::PROTOBUF_NAMESPACE_ID::int32 min() const;
  void set_min(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 max = 2 [default = 1];
  bool has_max() const;
  void clear_max();
  ::PROTOBUF_NAMESPACE_ID::int32 max() const;
  void set_max(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:oneflow.RandomUniformIntInitializerConf)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 min_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto;
};
// -------------------------------------------------------------------

class RandomNormalInitializerConf :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.RandomNormalInitializerConf) */ {
 public:
  RandomNormalInitializerConf();
  virtual ~RandomNormalInitializerConf();

  RandomNormalInitializerConf(const RandomNormalInitializerConf& from);
  RandomNormalInitializerConf(RandomNormalInitializerConf&& from) noexcept
    : RandomNormalInitializerConf() {
    *this = ::std::move(from);
  }

  inline RandomNormalInitializerConf& operator=(const RandomNormalInitializerConf& from) {
    CopyFrom(from);
    return *this;
  }
  inline RandomNormalInitializerConf& operator=(RandomNormalInitializerConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RandomNormalInitializerConf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RandomNormalInitializerConf* internal_default_instance() {
    return reinterpret_cast<const RandomNormalInitializerConf*>(
               &_RandomNormalInitializerConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(RandomNormalInitializerConf& a, RandomNormalInitializerConf& b) {
    a.Swap(&b);
  }
  inline void Swap(RandomNormalInitializerConf* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RandomNormalInitializerConf* New() const final {
    return CreateMaybeMessage<RandomNormalInitializerConf>(nullptr);
  }

  RandomNormalInitializerConf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RandomNormalInitializerConf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RandomNormalInitializerConf& from);
  void MergeFrom(const RandomNormalInitializerConf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RandomNormalInitializerConf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.RandomNormalInitializerConf";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMeanFieldNumber = 1,
    kStdFieldNumber = 2,
  };
  // optional float mean = 1 [default = 0];
  bool has_mean() const;
  void clear_mean();
  float mean() const;
  void set_mean(float value);

  // optional float std = 2 [default = 1];
  bool has_std() const;
  void clear_std();
  float std() const;
  void set_std(float value);

  // @@protoc_insertion_point(class_scope:oneflow.RandomNormalInitializerConf)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float mean_;
  float std_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto;
};
// -------------------------------------------------------------------

class TruncatedNormalInitializerConf :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.TruncatedNormalInitializerConf) */ {
 public:
  TruncatedNormalInitializerConf();
  virtual ~TruncatedNormalInitializerConf();

  TruncatedNormalInitializerConf(const TruncatedNormalInitializerConf& from);
  TruncatedNormalInitializerConf(TruncatedNormalInitializerConf&& from) noexcept
    : TruncatedNormalInitializerConf() {
    *this = ::std::move(from);
  }

  inline TruncatedNormalInitializerConf& operator=(const TruncatedNormalInitializerConf& from) {
    CopyFrom(from);
    return *this;
  }
  inline TruncatedNormalInitializerConf& operator=(TruncatedNormalInitializerConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TruncatedNormalInitializerConf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TruncatedNormalInitializerConf* internal_default_instance() {
    return reinterpret_cast<const TruncatedNormalInitializerConf*>(
               &_TruncatedNormalInitializerConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(TruncatedNormalInitializerConf& a, TruncatedNormalInitializerConf& b) {
    a.Swap(&b);
  }
  inline void Swap(TruncatedNormalInitializerConf* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TruncatedNormalInitializerConf* New() const final {
    return CreateMaybeMessage<TruncatedNormalInitializerConf>(nullptr);
  }

  TruncatedNormalInitializerConf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TruncatedNormalInitializerConf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TruncatedNormalInitializerConf& from);
  void MergeFrom(const TruncatedNormalInitializerConf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TruncatedNormalInitializerConf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.TruncatedNormalInitializerConf";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMeanFieldNumber = 1,
    kStdFieldNumber = 2,
  };
  // optional float mean = 1 [default = 0];
  bool has_mean() const;
  void clear_mean();
  float mean() const;
  void set_mean(float value);

  // optional float std = 2 [default = 0.05];
  bool has_std() const;
  void clear_std();
  float std() const;
  void set_std(float value);

  // @@protoc_insertion_point(class_scope:oneflow.TruncatedNormalInitializerConf)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float mean_;
  float std_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto;
};
// -------------------------------------------------------------------

class XavierInitializerConf :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.XavierInitializerConf) */ {
 public:
  XavierInitializerConf();
  virtual ~XavierInitializerConf();

  XavierInitializerConf(const XavierInitializerConf& from);
  XavierInitializerConf(XavierInitializerConf&& from) noexcept
    : XavierInitializerConf() {
    *this = ::std::move(from);
  }

  inline XavierInitializerConf& operator=(const XavierInitializerConf& from) {
    CopyFrom(from);
    return *this;
  }
  inline XavierInitializerConf& operator=(XavierInitializerConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const XavierInitializerConf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XavierInitializerConf* internal_default_instance() {
    return reinterpret_cast<const XavierInitializerConf*>(
               &_XavierInitializerConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(XavierInitializerConf& a, XavierInitializerConf& b) {
    a.Swap(&b);
  }
  inline void Swap(XavierInitializerConf* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline XavierInitializerConf* New() const final {
    return CreateMaybeMessage<XavierInitializerConf>(nullptr);
  }

  XavierInitializerConf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<XavierInitializerConf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const XavierInitializerConf& from);
  void MergeFrom(const XavierInitializerConf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(XavierInitializerConf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.XavierInitializerConf";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFormatFieldNumber = 2,
    kVarianceNormFieldNumber = 1,
  };
  // required string data_format = 2;
  bool has_data_format() const;
  void clear_data_format();
  const std::string& data_format() const;
  void set_data_format(const std::string& value);
  void set_data_format(std::string&& value);
  void set_data_format(const char* value);
  void set_data_format(const char* value, size_t size);
  std::string* mutable_data_format();
  std::string* release_data_format();
  void set_allocated_data_format(std::string* data_format);

  // required .oneflow.VarianceNorm variance_norm = 1;
  bool has_variance_norm() const;
  void clear_variance_norm();
  ::oneflow::VarianceNorm variance_norm() const;
  void set_variance_norm(::oneflow::VarianceNorm value);

  // @@protoc_insertion_point(class_scope:oneflow.XavierInitializerConf)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_format_;
  int variance_norm_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto;
};
// -------------------------------------------------------------------

class MsraInitializerConf :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.MsraInitializerConf) */ {
 public:
  MsraInitializerConf();
  virtual ~MsraInitializerConf();

  MsraInitializerConf(const MsraInitializerConf& from);
  MsraInitializerConf(MsraInitializerConf&& from) noexcept
    : MsraInitializerConf() {
    *this = ::std::move(from);
  }

  inline MsraInitializerConf& operator=(const MsraInitializerConf& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsraInitializerConf& operator=(MsraInitializerConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsraInitializerConf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsraInitializerConf* internal_default_instance() {
    return reinterpret_cast<const MsraInitializerConf*>(
               &_MsraInitializerConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MsraInitializerConf& a, MsraInitializerConf& b) {
    a.Swap(&b);
  }
  inline void Swap(MsraInitializerConf* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsraInitializerConf* New() const final {
    return CreateMaybeMessage<MsraInitializerConf>(nullptr);
  }

  MsraInitializerConf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsraInitializerConf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsraInitializerConf& from);
  void MergeFrom(const MsraInitializerConf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsraInitializerConf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.MsraInitializerConf";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFormatFieldNumber = 2,
    kVarianceNormFieldNumber = 1,
  };
  // required string data_format = 2;
  bool has_data_format() const;
  void clear_data_format();
  const std::string& data_format() const;
  void set_data_format(const std::string& value);
  void set_data_format(std::string&& value);
  void set_data_format(const char* value);
  void set_data_format(const char* value, size_t size);
  std::string* mutable_data_format();
  std::string* release_data_format();
  void set_allocated_data_format(std::string* data_format);

  // required .oneflow.VarianceNorm variance_norm = 1;
  bool has_variance_norm() const;
  void clear_variance_norm();
  ::oneflow::VarianceNorm variance_norm() const;
  void set_variance_norm(::oneflow::VarianceNorm value);

  // @@protoc_insertion_point(class_scope:oneflow.MsraInitializerConf)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_format_;
  int variance_norm_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto;
};
// -------------------------------------------------------------------

class RangeInitializerConf :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.RangeInitializerConf) */ {
 public:
  RangeInitializerConf();
  virtual ~RangeInitializerConf();

  RangeInitializerConf(const RangeInitializerConf& from);
  RangeInitializerConf(RangeInitializerConf&& from) noexcept
    : RangeInitializerConf() {
    *this = ::std::move(from);
  }

  inline RangeInitializerConf& operator=(const RangeInitializerConf& from) {
    CopyFrom(from);
    return *this;
  }
  inline RangeInitializerConf& operator=(RangeInitializerConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RangeInitializerConf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RangeInitializerConf* internal_default_instance() {
    return reinterpret_cast<const RangeInitializerConf*>(
               &_RangeInitializerConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(RangeInitializerConf& a, RangeInitializerConf& b) {
    a.Swap(&b);
  }
  inline void Swap(RangeInitializerConf* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RangeInitializerConf* New() const final {
    return CreateMaybeMessage<RangeInitializerConf>(nullptr);
  }

  RangeInitializerConf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RangeInitializerConf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RangeInitializerConf& from);
  void MergeFrom(const RangeInitializerConf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RangeInitializerConf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.RangeInitializerConf";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStartFieldNumber = 1,
    kStrideFieldNumber = 2,
    kAxisFieldNumber = 3,
  };
  // optional double start = 1 [default = 0];
  bool has_start() const;
  void clear_start();
  double start() const;
  void set_start(double value);

  // optional double stride = 2 [default = 1];
  bool has_stride() const;
  void clear_stride();
  double stride() const;
  void set_stride(double value);

  // optional int64 axis = 3 [default = -1];
  bool has_axis() const;
  void clear_axis();
  ::PROTOBUF_NAMESPACE_ID::int64 axis() const;
  void set_axis(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:oneflow.RangeInitializerConf)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  double start_;
  double stride_;
  ::PROTOBUF_NAMESPACE_ID::int64 axis_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto;
};
// -------------------------------------------------------------------

class IntRangeInitializerConf :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.IntRangeInitializerConf) */ {
 public:
  IntRangeInitializerConf();
  virtual ~IntRangeInitializerConf();

  IntRangeInitializerConf(const IntRangeInitializerConf& from);
  IntRangeInitializerConf(IntRangeInitializerConf&& from) noexcept
    : IntRangeInitializerConf() {
    *this = ::std::move(from);
  }

  inline IntRangeInitializerConf& operator=(const IntRangeInitializerConf& from) {
    CopyFrom(from);
    return *this;
  }
  inline IntRangeInitializerConf& operator=(IntRangeInitializerConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IntRangeInitializerConf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntRangeInitializerConf* internal_default_instance() {
    return reinterpret_cast<const IntRangeInitializerConf*>(
               &_IntRangeInitializerConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(IntRangeInitializerConf& a, IntRangeInitializerConf& b) {
    a.Swap(&b);
  }
  inline void Swap(IntRangeInitializerConf* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IntRangeInitializerConf* New() const final {
    return CreateMaybeMessage<IntRangeInitializerConf>(nullptr);
  }

  IntRangeInitializerConf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IntRangeInitializerConf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IntRangeInitializerConf& from);
  void MergeFrom(const IntRangeInitializerConf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntRangeInitializerConf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.IntRangeInitializerConf";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStartFieldNumber = 1,
    kStrideFieldNumber = 2,
    kAxisFieldNumber = 3,
  };
  // optional int64 start = 1 [default = 0];
  bool has_start() const;
  void clear_start();
  ::PROTOBUF_NAMESPACE_ID::int64 start() const;
  void set_start(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 stride = 2 [default = 1];
  bool has_stride() const;
  void clear_stride();
  ::PROTOBUF_NAMESPACE_ID::int64 stride() const;
  void set_stride(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 axis = 3 [default = -1];
  bool has_axis() const;
  void clear_axis();
  ::PROTOBUF_NAMESPACE_ID::int64 axis() const;
  void set_axis(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:oneflow.IntRangeInitializerConf)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 start_;
  ::PROTOBUF_NAMESPACE_ID::int64 stride_;
  ::PROTOBUF_NAMESPACE_ID::int64 axis_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto;
};
// -------------------------------------------------------------------

class VarianceScalingInitializerConf :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.VarianceScalingInitializerConf) */ {
 public:
  VarianceScalingInitializerConf();
  virtual ~VarianceScalingInitializerConf();

  VarianceScalingInitializerConf(const VarianceScalingInitializerConf& from);
  VarianceScalingInitializerConf(VarianceScalingInitializerConf&& from) noexcept
    : VarianceScalingInitializerConf() {
    *this = ::std::move(from);
  }

  inline VarianceScalingInitializerConf& operator=(const VarianceScalingInitializerConf& from) {
    CopyFrom(from);
    return *this;
  }
  inline VarianceScalingInitializerConf& operator=(VarianceScalingInitializerConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VarianceScalingInitializerConf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VarianceScalingInitializerConf* internal_default_instance() {
    return reinterpret_cast<const VarianceScalingInitializerConf*>(
               &_VarianceScalingInitializerConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(VarianceScalingInitializerConf& a, VarianceScalingInitializerConf& b) {
    a.Swap(&b);
  }
  inline void Swap(VarianceScalingInitializerConf* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VarianceScalingInitializerConf* New() const final {
    return CreateMaybeMessage<VarianceScalingInitializerConf>(nullptr);
  }

  VarianceScalingInitializerConf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VarianceScalingInitializerConf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VarianceScalingInitializerConf& from);
  void MergeFrom(const VarianceScalingInitializerConf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VarianceScalingInitializerConf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.VarianceScalingInitializerConf";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFormatFieldNumber = 4,
    kScaleFieldNumber = 1,
    kVarianceNormFieldNumber = 2,
    kDistributionFieldNumber = 3,
  };
  // required string data_format = 4;
  bool has_data_format() const;
  void clear_data_format();
  const std::string& data_format() const;
  void set_data_format(const std::string& value);
  void set_data_format(std::string&& value);
  void set_data_format(const char* value);
  void set_data_format(const char* value, size_t size);
  std::string* mutable_data_format();
  std::string* release_data_format();
  void set_allocated_data_format(std::string* data_format);

  // required float scale = 1;
  bool has_scale() const;
  void clear_scale();
  float scale() const;
  void set_scale(float value);

  // required .oneflow.VarianceNorm variance_norm = 2;
  bool has_variance_norm() const;
  void clear_variance_norm();
  ::oneflow::VarianceNorm variance_norm() const;
  void set_variance_norm(::oneflow::VarianceNorm value);

  // required .oneflow.RandomDistribution distribution = 3;
  bool has_distribution() const;
  void clear_distribution();
  ::oneflow::RandomDistribution distribution() const;
  void set_distribution(::oneflow::RandomDistribution value);

  // @@protoc_insertion_point(class_scope:oneflow.VarianceScalingInitializerConf)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_format_;
  float scale_;
  int variance_norm_;
  int distribution_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto;
};
// -------------------------------------------------------------------

class EmptyInitializerConf :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.EmptyInitializerConf) */ {
 public:
  EmptyInitializerConf();
  virtual ~EmptyInitializerConf();

  EmptyInitializerConf(const EmptyInitializerConf& from);
  EmptyInitializerConf(EmptyInitializerConf&& from) noexcept
    : EmptyInitializerConf() {
    *this = ::std::move(from);
  }

  inline EmptyInitializerConf& operator=(const EmptyInitializerConf& from) {
    CopyFrom(from);
    return *this;
  }
  inline EmptyInitializerConf& operator=(EmptyInitializerConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EmptyInitializerConf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EmptyInitializerConf* internal_default_instance() {
    return reinterpret_cast<const EmptyInitializerConf*>(
               &_EmptyInitializerConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(EmptyInitializerConf& a, EmptyInitializerConf& b) {
    a.Swap(&b);
  }
  inline void Swap(EmptyInitializerConf* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EmptyInitializerConf* New() const final {
    return CreateMaybeMessage<EmptyInitializerConf>(nullptr);
  }

  EmptyInitializerConf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EmptyInitializerConf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EmptyInitializerConf& from);
  void MergeFrom(const EmptyInitializerConf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EmptyInitializerConf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.EmptyInitializerConf";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:oneflow.EmptyInitializerConf)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto;
};
// -------------------------------------------------------------------

class InitializerConf :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.InitializerConf) */ {
 public:
  InitializerConf();
  virtual ~InitializerConf();

  InitializerConf(const InitializerConf& from);
  InitializerConf(InitializerConf&& from) noexcept
    : InitializerConf() {
    *this = ::std::move(from);
  }

  inline InitializerConf& operator=(const InitializerConf& from) {
    CopyFrom(from);
    return *this;
  }
  inline InitializerConf& operator=(InitializerConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InitializerConf& default_instance();

  enum TypeCase {
    kConstantConf = 1,
    kConstantIntConf = 2,
    kRandomUniformConf = 3,
    kRandomUniformIntConf = 4,
    kRandomNormalConf = 5,
    kTruncatedNormalConf = 6,
    kXavierConf = 7,
    kMsraConf = 8,
    kRangeConf = 9,
    kIntRangeConf = 10,
    kVarianceScalingConf = 11,
    kEmptyConf = 12,
    TYPE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InitializerConf* internal_default_instance() {
    return reinterpret_cast<const InitializerConf*>(
               &_InitializerConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(InitializerConf& a, InitializerConf& b) {
    a.Swap(&b);
  }
  inline void Swap(InitializerConf* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InitializerConf* New() const final {
    return CreateMaybeMessage<InitializerConf>(nullptr);
  }

  InitializerConf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InitializerConf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InitializerConf& from);
  void MergeFrom(const InitializerConf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InitializerConf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.InitializerConf";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConstantConfFieldNumber = 1,
    kConstantIntConfFieldNumber = 2,
    kRandomUniformConfFieldNumber = 3,
    kRandomUniformIntConfFieldNumber = 4,
    kRandomNormalConfFieldNumber = 5,
    kTruncatedNormalConfFieldNumber = 6,
    kXavierConfFieldNumber = 7,
    kMsraConfFieldNumber = 8,
    kRangeConfFieldNumber = 9,
    kIntRangeConfFieldNumber = 10,
    kVarianceScalingConfFieldNumber = 11,
    kEmptyConfFieldNumber = 12,
  };
  // optional .oneflow.ConstantInitializerConf constant_conf = 1;
  bool has_constant_conf() const;
  void clear_constant_conf();
  const ::oneflow::ConstantInitializerConf& constant_conf() const;
  ::oneflow::ConstantInitializerConf* release_constant_conf();
  ::oneflow::ConstantInitializerConf* mutable_constant_conf();
  void set_allocated_constant_conf(::oneflow::ConstantInitializerConf* constant_conf);

  // optional .oneflow.ConstantIntInitializerConf constant_int_conf = 2;
  bool has_constant_int_conf() const;
  void clear_constant_int_conf();
  const ::oneflow::ConstantIntInitializerConf& constant_int_conf() const;
  ::oneflow::ConstantIntInitializerConf* release_constant_int_conf();
  ::oneflow::ConstantIntInitializerConf* mutable_constant_int_conf();
  void set_allocated_constant_int_conf(::oneflow::ConstantIntInitializerConf* constant_int_conf);

  // optional .oneflow.RandomUniformInitializerConf random_uniform_conf = 3;
  bool has_random_uniform_conf() const;
  void clear_random_uniform_conf();
  const ::oneflow::RandomUniformInitializerConf& random_uniform_conf() const;
  ::oneflow::RandomUniformInitializerConf* release_random_uniform_conf();
  ::oneflow::RandomUniformInitializerConf* mutable_random_uniform_conf();
  void set_allocated_random_uniform_conf(::oneflow::RandomUniformInitializerConf* random_uniform_conf);

  // optional .oneflow.RandomUniformIntInitializerConf random_uniform_int_conf = 4;
  bool has_random_uniform_int_conf() const;
  void clear_random_uniform_int_conf();
  const ::oneflow::RandomUniformIntInitializerConf& random_uniform_int_conf() const;
  ::oneflow::RandomUniformIntInitializerConf* release_random_uniform_int_conf();
  ::oneflow::RandomUniformIntInitializerConf* mutable_random_uniform_int_conf();
  void set_allocated_random_uniform_int_conf(::oneflow::RandomUniformIntInitializerConf* random_uniform_int_conf);

  // optional .oneflow.RandomNormalInitializerConf random_normal_conf = 5;
  bool has_random_normal_conf() const;
  void clear_random_normal_conf();
  const ::oneflow::RandomNormalInitializerConf& random_normal_conf() const;
  ::oneflow::RandomNormalInitializerConf* release_random_normal_conf();
  ::oneflow::RandomNormalInitializerConf* mutable_random_normal_conf();
  void set_allocated_random_normal_conf(::oneflow::RandomNormalInitializerConf* random_normal_conf);

  // optional .oneflow.TruncatedNormalInitializerConf truncated_normal_conf = 6;
  bool has_truncated_normal_conf() const;
  void clear_truncated_normal_conf();
  const ::oneflow::TruncatedNormalInitializerConf& truncated_normal_conf() const;
  ::oneflow::TruncatedNormalInitializerConf* release_truncated_normal_conf();
  ::oneflow::TruncatedNormalInitializerConf* mutable_truncated_normal_conf();
  void set_allocated_truncated_normal_conf(::oneflow::TruncatedNormalInitializerConf* truncated_normal_conf);

  // optional .oneflow.XavierInitializerConf xavier_conf = 7;
  bool has_xavier_conf() const;
  void clear_xavier_conf();
  const ::oneflow::XavierInitializerConf& xavier_conf() const;
  ::oneflow::XavierInitializerConf* release_xavier_conf();
  ::oneflow::XavierInitializerConf* mutable_xavier_conf();
  void set_allocated_xavier_conf(::oneflow::XavierInitializerConf* xavier_conf);

  // optional .oneflow.MsraInitializerConf msra_conf = 8;
  bool has_msra_conf() const;
  void clear_msra_conf();
  const ::oneflow::MsraInitializerConf& msra_conf() const;
  ::oneflow::MsraInitializerConf* release_msra_conf();
  ::oneflow::MsraInitializerConf* mutable_msra_conf();
  void set_allocated_msra_conf(::oneflow::MsraInitializerConf* msra_conf);

  // optional .oneflow.RangeInitializerConf range_conf = 9;
  bool has_range_conf() const;
  void clear_range_conf();
  const ::oneflow::RangeInitializerConf& range_conf() const;
  ::oneflow::RangeInitializerConf* release_range_conf();
  ::oneflow::RangeInitializerConf* mutable_range_conf();
  void set_allocated_range_conf(::oneflow::RangeInitializerConf* range_conf);

  // optional .oneflow.IntRangeInitializerConf int_range_conf = 10;
  bool has_int_range_conf() const;
  void clear_int_range_conf();
  const ::oneflow::IntRangeInitializerConf& int_range_conf() const;
  ::oneflow::IntRangeInitializerConf* release_int_range_conf();
  ::oneflow::IntRangeInitializerConf* mutable_int_range_conf();
  void set_allocated_int_range_conf(::oneflow::IntRangeInitializerConf* int_range_conf);

  // optional .oneflow.VarianceScalingInitializerConf variance_scaling_conf = 11;
  bool has_variance_scaling_conf() const;
  void clear_variance_scaling_conf();
  const ::oneflow::VarianceScalingInitializerConf& variance_scaling_conf() const;
  ::oneflow::VarianceScalingInitializerConf* release_variance_scaling_conf();
  ::oneflow::VarianceScalingInitializerConf* mutable_variance_scaling_conf();
  void set_allocated_variance_scaling_conf(::oneflow::VarianceScalingInitializerConf* variance_scaling_conf);

  // optional .oneflow.EmptyInitializerConf empty_conf = 12;
  bool has_empty_conf() const;
  void clear_empty_conf();
  const ::oneflow::EmptyInitializerConf& empty_conf() const;
  ::oneflow::EmptyInitializerConf* release_empty_conf();
  ::oneflow::EmptyInitializerConf* mutable_empty_conf();
  void set_allocated_empty_conf(::oneflow::EmptyInitializerConf* empty_conf);

  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:oneflow.InitializerConf)
 private:
  class _Internal;
  void set_has_constant_conf();
  void set_has_constant_int_conf();
  void set_has_random_uniform_conf();
  void set_has_random_uniform_int_conf();
  void set_has_random_normal_conf();
  void set_has_truncated_normal_conf();
  void set_has_xavier_conf();
  void set_has_msra_conf();
  void set_has_range_conf();
  void set_has_int_range_conf();
  void set_has_variance_scaling_conf();
  void set_has_empty_conf();

  inline bool has_type() const;
  inline void clear_has_type();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  union TypeUnion {
    TypeUnion() {}
    ::oneflow::ConstantInitializerConf* constant_conf_;
    ::oneflow::ConstantIntInitializerConf* constant_int_conf_;
    ::oneflow::RandomUniformInitializerConf* random_uniform_conf_;
    ::oneflow::RandomUniformIntInitializerConf* random_uniform_int_conf_;
    ::oneflow::RandomNormalInitializerConf* random_normal_conf_;
    ::oneflow::TruncatedNormalInitializerConf* truncated_normal_conf_;
    ::oneflow::XavierInitializerConf* xavier_conf_;
    ::oneflow::MsraInitializerConf* msra_conf_;
    ::oneflow::RangeInitializerConf* range_conf_;
    ::oneflow::IntRangeInitializerConf* int_range_conf_;
    ::oneflow::VarianceScalingInitializerConf* variance_scaling_conf_;
    ::oneflow::EmptyInitializerConf* empty_conf_;
  } type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto;
};
// -------------------------------------------------------------------

class InitializeWithSnapshotConf :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.InitializeWithSnapshotConf) */ {
 public:
  InitializeWithSnapshotConf();
  virtual ~InitializeWithSnapshotConf();

  InitializeWithSnapshotConf(const InitializeWithSnapshotConf& from);
  InitializeWithSnapshotConf(InitializeWithSnapshotConf&& from) noexcept
    : InitializeWithSnapshotConf() {
    *this = ::std::move(from);
  }

  inline InitializeWithSnapshotConf& operator=(const InitializeWithSnapshotConf& from) {
    CopyFrom(from);
    return *this;
  }
  inline InitializeWithSnapshotConf& operator=(InitializeWithSnapshotConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InitializeWithSnapshotConf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InitializeWithSnapshotConf* internal_default_instance() {
    return reinterpret_cast<const InitializeWithSnapshotConf*>(
               &_InitializeWithSnapshotConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(InitializeWithSnapshotConf& a, InitializeWithSnapshotConf& b) {
    a.Swap(&b);
  }
  inline void Swap(InitializeWithSnapshotConf* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InitializeWithSnapshotConf* New() const final {
    return CreateMaybeMessage<InitializeWithSnapshotConf>(nullptr);
  }

  InitializeWithSnapshotConf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InitializeWithSnapshotConf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InitializeWithSnapshotConf& from);
  void MergeFrom(const InitializeWithSnapshotConf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InitializeWithSnapshotConf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.InitializeWithSnapshotConf";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
    kKeyFieldNumber = 2,
  };
  // required string path = 1;
  bool has_path() const;
  void clear_path();
  const std::string& path() const;
  void set_path(const std::string& value);
  void set_path(std::string&& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  std::string* mutable_path();
  std::string* release_path();
  void set_allocated_path(std::string* path);

  // optional string key = 2;
  bool has_key() const;
  void clear_key();
  const std::string& key() const;
  void set_key(const std::string& value);
  void set_key(std::string&& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  std::string* mutable_key();
  std::string* release_key();
  void set_allocated_key(std::string* key);

  // @@protoc_insertion_point(class_scope:oneflow.InitializeWithSnapshotConf)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr path_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ConstantInitializerConf

// optional float value = 1 [default = 0];
inline bool ConstantInitializerConf::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConstantInitializerConf::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float ConstantInitializerConf::value() const {
  // @@protoc_insertion_point(field_get:oneflow.ConstantInitializerConf.value)
  return value_;
}
inline void ConstantInitializerConf::set_value(float value) {
  _has_bits_[0] |= 0x00000001u;
  value_ = value;
  // @@protoc_insertion_point(field_set:oneflow.ConstantInitializerConf.value)
}

// -------------------------------------------------------------------

// ConstantIntInitializerConf

// optional int64 value = 1 [default = 0];
inline bool ConstantIntInitializerConf::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConstantIntInitializerConf::clear_value() {
  value_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantIntInitializerConf::value() const {
  // @@protoc_insertion_point(field_get:oneflow.ConstantIntInitializerConf.value)
  return value_;
}
inline void ConstantIntInitializerConf::set_value(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  value_ = value;
  // @@protoc_insertion_point(field_set:oneflow.ConstantIntInitializerConf.value)
}

// -------------------------------------------------------------------

// RandomUniformInitializerConf

// optional float min = 1 [default = 0];
inline bool RandomUniformInitializerConf::has_min() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RandomUniformInitializerConf::clear_min() {
  min_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float RandomUniformInitializerConf::min() const {
  // @@protoc_insertion_point(field_get:oneflow.RandomUniformInitializerConf.min)
  return min_;
}
inline void RandomUniformInitializerConf::set_min(float value) {
  _has_bits_[0] |= 0x00000001u;
  min_ = value;
  // @@protoc_insertion_point(field_set:oneflow.RandomUniformInitializerConf.min)
}

// optional float max = 2 [default = 1];
inline bool RandomUniformInitializerConf::has_max() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RandomUniformInitializerConf::clear_max() {
  max_ = 1;
  _has_bits_[0] &= ~0x00000002u;
}
inline float RandomUniformInitializerConf::max() const {
  // @@protoc_insertion_point(field_get:oneflow.RandomUniformInitializerConf.max)
  return max_;
}
inline void RandomUniformInitializerConf::set_max(float value) {
  _has_bits_[0] |= 0x00000002u;
  max_ = value;
  // @@protoc_insertion_point(field_set:oneflow.RandomUniformInitializerConf.max)
}

// -------------------------------------------------------------------

// RandomUniformIntInitializerConf

// optional int32 min = 1 [default = 0];
inline bool RandomUniformIntInitializerConf::has_min() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RandomUniformIntInitializerConf::clear_min() {
  min_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RandomUniformIntInitializerConf::min() const {
  // @@protoc_insertion_point(field_get:oneflow.RandomUniformIntInitializerConf.min)
  return min_;
}
inline void RandomUniformIntInitializerConf::set_min(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  min_ = value;
  // @@protoc_insertion_point(field_set:oneflow.RandomUniformIntInitializerConf.min)
}

// optional int32 max = 2 [default = 1];
inline bool RandomUniformIntInitializerConf::has_max() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RandomUniformIntInitializerConf::clear_max() {
  max_ = 1;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RandomUniformIntInitializerConf::max() const {
  // @@protoc_insertion_point(field_get:oneflow.RandomUniformIntInitializerConf.max)
  return max_;
}
inline void RandomUniformIntInitializerConf::set_max(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  max_ = value;
  // @@protoc_insertion_point(field_set:oneflow.RandomUniformIntInitializerConf.max)
}

// -------------------------------------------------------------------

// RandomNormalInitializerConf

// optional float mean = 1 [default = 0];
inline bool RandomNormalInitializerConf::has_mean() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RandomNormalInitializerConf::clear_mean() {
  mean_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float RandomNormalInitializerConf::mean() const {
  // @@protoc_insertion_point(field_get:oneflow.RandomNormalInitializerConf.mean)
  return mean_;
}
inline void RandomNormalInitializerConf::set_mean(float value) {
  _has_bits_[0] |= 0x00000001u;
  mean_ = value;
  // @@protoc_insertion_point(field_set:oneflow.RandomNormalInitializerConf.mean)
}

// optional float std = 2 [default = 1];
inline bool RandomNormalInitializerConf::has_std() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RandomNormalInitializerConf::clear_std() {
  std_ = 1;
  _has_bits_[0] &= ~0x00000002u;
}
inline float RandomNormalInitializerConf::std() const {
  // @@protoc_insertion_point(field_get:oneflow.RandomNormalInitializerConf.std)
  return std_;
}
inline void RandomNormalInitializerConf::set_std(float value) {
  _has_bits_[0] |= 0x00000002u;
  std_ = value;
  // @@protoc_insertion_point(field_set:oneflow.RandomNormalInitializerConf.std)
}

// -------------------------------------------------------------------

// TruncatedNormalInitializerConf

// optional float mean = 1 [default = 0];
inline bool TruncatedNormalInitializerConf::has_mean() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TruncatedNormalInitializerConf::clear_mean() {
  mean_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float TruncatedNormalInitializerConf::mean() const {
  // @@protoc_insertion_point(field_get:oneflow.TruncatedNormalInitializerConf.mean)
  return mean_;
}
inline void TruncatedNormalInitializerConf::set_mean(float value) {
  _has_bits_[0] |= 0x00000001u;
  mean_ = value;
  // @@protoc_insertion_point(field_set:oneflow.TruncatedNormalInitializerConf.mean)
}

// optional float std = 2 [default = 0.05];
inline bool TruncatedNormalInitializerConf::has_std() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TruncatedNormalInitializerConf::clear_std() {
  std_ = 0.05f;
  _has_bits_[0] &= ~0x00000002u;
}
inline float TruncatedNormalInitializerConf::std() const {
  // @@protoc_insertion_point(field_get:oneflow.TruncatedNormalInitializerConf.std)
  return std_;
}
inline void TruncatedNormalInitializerConf::set_std(float value) {
  _has_bits_[0] |= 0x00000002u;
  std_ = value;
  // @@protoc_insertion_point(field_set:oneflow.TruncatedNormalInitializerConf.std)
}

// -------------------------------------------------------------------

// XavierInitializerConf

// required .oneflow.VarianceNorm variance_norm = 1;
inline bool XavierInitializerConf::has_variance_norm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void XavierInitializerConf::clear_variance_norm() {
  variance_norm_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::oneflow::VarianceNorm XavierInitializerConf::variance_norm() const {
  // @@protoc_insertion_point(field_get:oneflow.XavierInitializerConf.variance_norm)
  return static_cast< ::oneflow::VarianceNorm >(variance_norm_);
}
inline void XavierInitializerConf::set_variance_norm(::oneflow::VarianceNorm value) {
  assert(::oneflow::VarianceNorm_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  variance_norm_ = value;
  // @@protoc_insertion_point(field_set:oneflow.XavierInitializerConf.variance_norm)
}

// required string data_format = 2;
inline bool XavierInitializerConf::has_data_format() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void XavierInitializerConf::clear_data_format() {
  data_format_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& XavierInitializerConf::data_format() const {
  // @@protoc_insertion_point(field_get:oneflow.XavierInitializerConf.data_format)
  return data_format_.GetNoArena();
}
inline void XavierInitializerConf::set_data_format(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  data_format_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oneflow.XavierInitializerConf.data_format)
}
inline void XavierInitializerConf::set_data_format(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  data_format_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oneflow.XavierInitializerConf.data_format)
}
inline void XavierInitializerConf::set_data_format(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  data_format_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oneflow.XavierInitializerConf.data_format)
}
inline void XavierInitializerConf::set_data_format(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  data_format_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oneflow.XavierInitializerConf.data_format)
}
inline std::string* XavierInitializerConf::mutable_data_format() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:oneflow.XavierInitializerConf.data_format)
  return data_format_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* XavierInitializerConf::release_data_format() {
  // @@protoc_insertion_point(field_release:oneflow.XavierInitializerConf.data_format)
  if (!has_data_format()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return data_format_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void XavierInitializerConf::set_allocated_data_format(std::string* data_format) {
  if (data_format != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_format_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data_format);
  // @@protoc_insertion_point(field_set_allocated:oneflow.XavierInitializerConf.data_format)
}

// -------------------------------------------------------------------

// MsraInitializerConf

// required .oneflow.VarianceNorm variance_norm = 1;
inline bool MsraInitializerConf::has_variance_norm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsraInitializerConf::clear_variance_norm() {
  variance_norm_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::oneflow::VarianceNorm MsraInitializerConf::variance_norm() const {
  // @@protoc_insertion_point(field_get:oneflow.MsraInitializerConf.variance_norm)
  return static_cast< ::oneflow::VarianceNorm >(variance_norm_);
}
inline void MsraInitializerConf::set_variance_norm(::oneflow::VarianceNorm value) {
  assert(::oneflow::VarianceNorm_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  variance_norm_ = value;
  // @@protoc_insertion_point(field_set:oneflow.MsraInitializerConf.variance_norm)
}

// required string data_format = 2;
inline bool MsraInitializerConf::has_data_format() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsraInitializerConf::clear_data_format() {
  data_format_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MsraInitializerConf::data_format() const {
  // @@protoc_insertion_point(field_get:oneflow.MsraInitializerConf.data_format)
  return data_format_.GetNoArena();
}
inline void MsraInitializerConf::set_data_format(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  data_format_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oneflow.MsraInitializerConf.data_format)
}
inline void MsraInitializerConf::set_data_format(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  data_format_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oneflow.MsraInitializerConf.data_format)
}
inline void MsraInitializerConf::set_data_format(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  data_format_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oneflow.MsraInitializerConf.data_format)
}
inline void MsraInitializerConf::set_data_format(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  data_format_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oneflow.MsraInitializerConf.data_format)
}
inline std::string* MsraInitializerConf::mutable_data_format() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:oneflow.MsraInitializerConf.data_format)
  return data_format_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MsraInitializerConf::release_data_format() {
  // @@protoc_insertion_point(field_release:oneflow.MsraInitializerConf.data_format)
  if (!has_data_format()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return data_format_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MsraInitializerConf::set_allocated_data_format(std::string* data_format) {
  if (data_format != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_format_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data_format);
  // @@protoc_insertion_point(field_set_allocated:oneflow.MsraInitializerConf.data_format)
}

// -------------------------------------------------------------------

// RangeInitializerConf

// optional double start = 1 [default = 0];
inline bool RangeInitializerConf::has_start() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RangeInitializerConf::clear_start() {
  start_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline double RangeInitializerConf::start() const {
  // @@protoc_insertion_point(field_get:oneflow.RangeInitializerConf.start)
  return start_;
}
inline void RangeInitializerConf::set_start(double value) {
  _has_bits_[0] |= 0x00000001u;
  start_ = value;
  // @@protoc_insertion_point(field_set:oneflow.RangeInitializerConf.start)
}

// optional double stride = 2 [default = 1];
inline bool RangeInitializerConf::has_stride() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RangeInitializerConf::clear_stride() {
  stride_ = 1;
  _has_bits_[0] &= ~0x00000002u;
}
inline double RangeInitializerConf::stride() const {
  // @@protoc_insertion_point(field_get:oneflow.RangeInitializerConf.stride)
  return stride_;
}
inline void RangeInitializerConf::set_stride(double value) {
  _has_bits_[0] |= 0x00000002u;
  stride_ = value;
  // @@protoc_insertion_point(field_set:oneflow.RangeInitializerConf.stride)
}

// optional int64 axis = 3 [default = -1];
inline bool RangeInitializerConf::has_axis() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RangeInitializerConf::clear_axis() {
  axis_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 RangeInitializerConf::axis() const {
  // @@protoc_insertion_point(field_get:oneflow.RangeInitializerConf.axis)
  return axis_;
}
inline void RangeInitializerConf::set_axis(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  axis_ = value;
  // @@protoc_insertion_point(field_set:oneflow.RangeInitializerConf.axis)
}

// -------------------------------------------------------------------

// IntRangeInitializerConf

// optional int64 start = 1 [default = 0];
inline bool IntRangeInitializerConf::has_start() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IntRangeInitializerConf::clear_start() {
  start_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 IntRangeInitializerConf::start() const {
  // @@protoc_insertion_point(field_get:oneflow.IntRangeInitializerConf.start)
  return start_;
}
inline void IntRangeInitializerConf::set_start(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  start_ = value;
  // @@protoc_insertion_point(field_set:oneflow.IntRangeInitializerConf.start)
}

// optional int64 stride = 2 [default = 1];
inline bool IntRangeInitializerConf::has_stride() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IntRangeInitializerConf::clear_stride() {
  stride_ = PROTOBUF_LONGLONG(1);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 IntRangeInitializerConf::stride() const {
  // @@protoc_insertion_point(field_get:oneflow.IntRangeInitializerConf.stride)
  return stride_;
}
inline void IntRangeInitializerConf::set_stride(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  stride_ = value;
  // @@protoc_insertion_point(field_set:oneflow.IntRangeInitializerConf.stride)
}

// optional int64 axis = 3 [default = -1];
inline bool IntRangeInitializerConf::has_axis() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IntRangeInitializerConf::clear_axis() {
  axis_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 IntRangeInitializerConf::axis() const {
  // @@protoc_insertion_point(field_get:oneflow.IntRangeInitializerConf.axis)
  return axis_;
}
inline void IntRangeInitializerConf::set_axis(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  axis_ = value;
  // @@protoc_insertion_point(field_set:oneflow.IntRangeInitializerConf.axis)
}

// -------------------------------------------------------------------

// VarianceScalingInitializerConf

// required float scale = 1;
inline bool VarianceScalingInitializerConf::has_scale() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VarianceScalingInitializerConf::clear_scale() {
  scale_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float VarianceScalingInitializerConf::scale() const {
  // @@protoc_insertion_point(field_get:oneflow.VarianceScalingInitializerConf.scale)
  return scale_;
}
inline void VarianceScalingInitializerConf::set_scale(float value) {
  _has_bits_[0] |= 0x00000002u;
  scale_ = value;
  // @@protoc_insertion_point(field_set:oneflow.VarianceScalingInitializerConf.scale)
}

// required .oneflow.VarianceNorm variance_norm = 2;
inline bool VarianceScalingInitializerConf::has_variance_norm() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VarianceScalingInitializerConf::clear_variance_norm() {
  variance_norm_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::oneflow::VarianceNorm VarianceScalingInitializerConf::variance_norm() const {
  // @@protoc_insertion_point(field_get:oneflow.VarianceScalingInitializerConf.variance_norm)
  return static_cast< ::oneflow::VarianceNorm >(variance_norm_);
}
inline void VarianceScalingInitializerConf::set_variance_norm(::oneflow::VarianceNorm value) {
  assert(::oneflow::VarianceNorm_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  variance_norm_ = value;
  // @@protoc_insertion_point(field_set:oneflow.VarianceScalingInitializerConf.variance_norm)
}

// required .oneflow.RandomDistribution distribution = 3;
inline bool VarianceScalingInitializerConf::has_distribution() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VarianceScalingInitializerConf::clear_distribution() {
  distribution_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::oneflow::RandomDistribution VarianceScalingInitializerConf::distribution() const {
  // @@protoc_insertion_point(field_get:oneflow.VarianceScalingInitializerConf.distribution)
  return static_cast< ::oneflow::RandomDistribution >(distribution_);
}
inline void VarianceScalingInitializerConf::set_distribution(::oneflow::RandomDistribution value) {
  assert(::oneflow::RandomDistribution_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  distribution_ = value;
  // @@protoc_insertion_point(field_set:oneflow.VarianceScalingInitializerConf.distribution)
}

// required string data_format = 4;
inline bool VarianceScalingInitializerConf::has_data_format() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VarianceScalingInitializerConf::clear_data_format() {
  data_format_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& VarianceScalingInitializerConf::data_format() const {
  // @@protoc_insertion_point(field_get:oneflow.VarianceScalingInitializerConf.data_format)
  return data_format_.GetNoArena();
}
inline void VarianceScalingInitializerConf::set_data_format(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  data_format_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oneflow.VarianceScalingInitializerConf.data_format)
}
inline void VarianceScalingInitializerConf::set_data_format(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  data_format_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oneflow.VarianceScalingInitializerConf.data_format)
}
inline void VarianceScalingInitializerConf::set_data_format(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  data_format_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oneflow.VarianceScalingInitializerConf.data_format)
}
inline void VarianceScalingInitializerConf::set_data_format(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  data_format_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oneflow.VarianceScalingInitializerConf.data_format)
}
inline std::string* VarianceScalingInitializerConf::mutable_data_format() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:oneflow.VarianceScalingInitializerConf.data_format)
  return data_format_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* VarianceScalingInitializerConf::release_data_format() {
  // @@protoc_insertion_point(field_release:oneflow.VarianceScalingInitializerConf.data_format)
  if (!has_data_format()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return data_format_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void VarianceScalingInitializerConf::set_allocated_data_format(std::string* data_format) {
  if (data_format != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_format_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data_format);
  // @@protoc_insertion_point(field_set_allocated:oneflow.VarianceScalingInitializerConf.data_format)
}

// -------------------------------------------------------------------

// EmptyInitializerConf

// -------------------------------------------------------------------

// InitializerConf

// optional .oneflow.ConstantInitializerConf constant_conf = 1;
inline bool InitializerConf::has_constant_conf() const {
  return type_case() == kConstantConf;
}
inline void InitializerConf::set_has_constant_conf() {
  _oneof_case_[0] = kConstantConf;
}
inline void InitializerConf::clear_constant_conf() {
  if (has_constant_conf()) {
    delete type_.constant_conf_;
    clear_has_type();
  }
}
inline ::oneflow::ConstantInitializerConf* InitializerConf::release_constant_conf() {
  // @@protoc_insertion_point(field_release:oneflow.InitializerConf.constant_conf)
  if (has_constant_conf()) {
    clear_has_type();
      ::oneflow::ConstantInitializerConf* temp = type_.constant_conf_;
    type_.constant_conf_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::ConstantInitializerConf& InitializerConf::constant_conf() const {
  // @@protoc_insertion_point(field_get:oneflow.InitializerConf.constant_conf)
  return has_constant_conf()
      ? *type_.constant_conf_
      : *reinterpret_cast< ::oneflow::ConstantInitializerConf*>(&::oneflow::_ConstantInitializerConf_default_instance_);
}
inline ::oneflow::ConstantInitializerConf* InitializerConf::mutable_constant_conf() {
  if (!has_constant_conf()) {
    clear_type();
    set_has_constant_conf();
    type_.constant_conf_ = CreateMaybeMessage< ::oneflow::ConstantInitializerConf >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.InitializerConf.constant_conf)
  return type_.constant_conf_;
}

// optional .oneflow.ConstantIntInitializerConf constant_int_conf = 2;
inline bool InitializerConf::has_constant_int_conf() const {
  return type_case() == kConstantIntConf;
}
inline void InitializerConf::set_has_constant_int_conf() {
  _oneof_case_[0] = kConstantIntConf;
}
inline void InitializerConf::clear_constant_int_conf() {
  if (has_constant_int_conf()) {
    delete type_.constant_int_conf_;
    clear_has_type();
  }
}
inline ::oneflow::ConstantIntInitializerConf* InitializerConf::release_constant_int_conf() {
  // @@protoc_insertion_point(field_release:oneflow.InitializerConf.constant_int_conf)
  if (has_constant_int_conf()) {
    clear_has_type();
      ::oneflow::ConstantIntInitializerConf* temp = type_.constant_int_conf_;
    type_.constant_int_conf_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::ConstantIntInitializerConf& InitializerConf::constant_int_conf() const {
  // @@protoc_insertion_point(field_get:oneflow.InitializerConf.constant_int_conf)
  return has_constant_int_conf()
      ? *type_.constant_int_conf_
      : *reinterpret_cast< ::oneflow::ConstantIntInitializerConf*>(&::oneflow::_ConstantIntInitializerConf_default_instance_);
}
inline ::oneflow::ConstantIntInitializerConf* InitializerConf::mutable_constant_int_conf() {
  if (!has_constant_int_conf()) {
    clear_type();
    set_has_constant_int_conf();
    type_.constant_int_conf_ = CreateMaybeMessage< ::oneflow::ConstantIntInitializerConf >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.InitializerConf.constant_int_conf)
  return type_.constant_int_conf_;
}

// optional .oneflow.RandomUniformInitializerConf random_uniform_conf = 3;
inline bool InitializerConf::has_random_uniform_conf() const {
  return type_case() == kRandomUniformConf;
}
inline void InitializerConf::set_has_random_uniform_conf() {
  _oneof_case_[0] = kRandomUniformConf;
}
inline void InitializerConf::clear_random_uniform_conf() {
  if (has_random_uniform_conf()) {
    delete type_.random_uniform_conf_;
    clear_has_type();
  }
}
inline ::oneflow::RandomUniformInitializerConf* InitializerConf::release_random_uniform_conf() {
  // @@protoc_insertion_point(field_release:oneflow.InitializerConf.random_uniform_conf)
  if (has_random_uniform_conf()) {
    clear_has_type();
      ::oneflow::RandomUniformInitializerConf* temp = type_.random_uniform_conf_;
    type_.random_uniform_conf_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::RandomUniformInitializerConf& InitializerConf::random_uniform_conf() const {
  // @@protoc_insertion_point(field_get:oneflow.InitializerConf.random_uniform_conf)
  return has_random_uniform_conf()
      ? *type_.random_uniform_conf_
      : *reinterpret_cast< ::oneflow::RandomUniformInitializerConf*>(&::oneflow::_RandomUniformInitializerConf_default_instance_);
}
inline ::oneflow::RandomUniformInitializerConf* InitializerConf::mutable_random_uniform_conf() {
  if (!has_random_uniform_conf()) {
    clear_type();
    set_has_random_uniform_conf();
    type_.random_uniform_conf_ = CreateMaybeMessage< ::oneflow::RandomUniformInitializerConf >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.InitializerConf.random_uniform_conf)
  return type_.random_uniform_conf_;
}

// optional .oneflow.RandomUniformIntInitializerConf random_uniform_int_conf = 4;
inline bool InitializerConf::has_random_uniform_int_conf() const {
  return type_case() == kRandomUniformIntConf;
}
inline void InitializerConf::set_has_random_uniform_int_conf() {
  _oneof_case_[0] = kRandomUniformIntConf;
}
inline void InitializerConf::clear_random_uniform_int_conf() {
  if (has_random_uniform_int_conf()) {
    delete type_.random_uniform_int_conf_;
    clear_has_type();
  }
}
inline ::oneflow::RandomUniformIntInitializerConf* InitializerConf::release_random_uniform_int_conf() {
  // @@protoc_insertion_point(field_release:oneflow.InitializerConf.random_uniform_int_conf)
  if (has_random_uniform_int_conf()) {
    clear_has_type();
      ::oneflow::RandomUniformIntInitializerConf* temp = type_.random_uniform_int_conf_;
    type_.random_uniform_int_conf_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::RandomUniformIntInitializerConf& InitializerConf::random_uniform_int_conf() const {
  // @@protoc_insertion_point(field_get:oneflow.InitializerConf.random_uniform_int_conf)
  return has_random_uniform_int_conf()
      ? *type_.random_uniform_int_conf_
      : *reinterpret_cast< ::oneflow::RandomUniformIntInitializerConf*>(&::oneflow::_RandomUniformIntInitializerConf_default_instance_);
}
inline ::oneflow::RandomUniformIntInitializerConf* InitializerConf::mutable_random_uniform_int_conf() {
  if (!has_random_uniform_int_conf()) {
    clear_type();
    set_has_random_uniform_int_conf();
    type_.random_uniform_int_conf_ = CreateMaybeMessage< ::oneflow::RandomUniformIntInitializerConf >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.InitializerConf.random_uniform_int_conf)
  return type_.random_uniform_int_conf_;
}

// optional .oneflow.RandomNormalInitializerConf random_normal_conf = 5;
inline bool InitializerConf::has_random_normal_conf() const {
  return type_case() == kRandomNormalConf;
}
inline void InitializerConf::set_has_random_normal_conf() {
  _oneof_case_[0] = kRandomNormalConf;
}
inline void InitializerConf::clear_random_normal_conf() {
  if (has_random_normal_conf()) {
    delete type_.random_normal_conf_;
    clear_has_type();
  }
}
inline ::oneflow::RandomNormalInitializerConf* InitializerConf::release_random_normal_conf() {
  // @@protoc_insertion_point(field_release:oneflow.InitializerConf.random_normal_conf)
  if (has_random_normal_conf()) {
    clear_has_type();
      ::oneflow::RandomNormalInitializerConf* temp = type_.random_normal_conf_;
    type_.random_normal_conf_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::RandomNormalInitializerConf& InitializerConf::random_normal_conf() const {
  // @@protoc_insertion_point(field_get:oneflow.InitializerConf.random_normal_conf)
  return has_random_normal_conf()
      ? *type_.random_normal_conf_
      : *reinterpret_cast< ::oneflow::RandomNormalInitializerConf*>(&::oneflow::_RandomNormalInitializerConf_default_instance_);
}
inline ::oneflow::RandomNormalInitializerConf* InitializerConf::mutable_random_normal_conf() {
  if (!has_random_normal_conf()) {
    clear_type();
    set_has_random_normal_conf();
    type_.random_normal_conf_ = CreateMaybeMessage< ::oneflow::RandomNormalInitializerConf >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.InitializerConf.random_normal_conf)
  return type_.random_normal_conf_;
}

// optional .oneflow.TruncatedNormalInitializerConf truncated_normal_conf = 6;
inline bool InitializerConf::has_truncated_normal_conf() const {
  return type_case() == kTruncatedNormalConf;
}
inline void InitializerConf::set_has_truncated_normal_conf() {
  _oneof_case_[0] = kTruncatedNormalConf;
}
inline void InitializerConf::clear_truncated_normal_conf() {
  if (has_truncated_normal_conf()) {
    delete type_.truncated_normal_conf_;
    clear_has_type();
  }
}
inline ::oneflow::TruncatedNormalInitializerConf* InitializerConf::release_truncated_normal_conf() {
  // @@protoc_insertion_point(field_release:oneflow.InitializerConf.truncated_normal_conf)
  if (has_truncated_normal_conf()) {
    clear_has_type();
      ::oneflow::TruncatedNormalInitializerConf* temp = type_.truncated_normal_conf_;
    type_.truncated_normal_conf_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::TruncatedNormalInitializerConf& InitializerConf::truncated_normal_conf() const {
  // @@protoc_insertion_point(field_get:oneflow.InitializerConf.truncated_normal_conf)
  return has_truncated_normal_conf()
      ? *type_.truncated_normal_conf_
      : *reinterpret_cast< ::oneflow::TruncatedNormalInitializerConf*>(&::oneflow::_TruncatedNormalInitializerConf_default_instance_);
}
inline ::oneflow::TruncatedNormalInitializerConf* InitializerConf::mutable_truncated_normal_conf() {
  if (!has_truncated_normal_conf()) {
    clear_type();
    set_has_truncated_normal_conf();
    type_.truncated_normal_conf_ = CreateMaybeMessage< ::oneflow::TruncatedNormalInitializerConf >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.InitializerConf.truncated_normal_conf)
  return type_.truncated_normal_conf_;
}

// optional .oneflow.XavierInitializerConf xavier_conf = 7;
inline bool InitializerConf::has_xavier_conf() const {
  return type_case() == kXavierConf;
}
inline void InitializerConf::set_has_xavier_conf() {
  _oneof_case_[0] = kXavierConf;
}
inline void InitializerConf::clear_xavier_conf() {
  if (has_xavier_conf()) {
    delete type_.xavier_conf_;
    clear_has_type();
  }
}
inline ::oneflow::XavierInitializerConf* InitializerConf::release_xavier_conf() {
  // @@protoc_insertion_point(field_release:oneflow.InitializerConf.xavier_conf)
  if (has_xavier_conf()) {
    clear_has_type();
      ::oneflow::XavierInitializerConf* temp = type_.xavier_conf_;
    type_.xavier_conf_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::XavierInitializerConf& InitializerConf::xavier_conf() const {
  // @@protoc_insertion_point(field_get:oneflow.InitializerConf.xavier_conf)
  return has_xavier_conf()
      ? *type_.xavier_conf_
      : *reinterpret_cast< ::oneflow::XavierInitializerConf*>(&::oneflow::_XavierInitializerConf_default_instance_);
}
inline ::oneflow::XavierInitializerConf* InitializerConf::mutable_xavier_conf() {
  if (!has_xavier_conf()) {
    clear_type();
    set_has_xavier_conf();
    type_.xavier_conf_ = CreateMaybeMessage< ::oneflow::XavierInitializerConf >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.InitializerConf.xavier_conf)
  return type_.xavier_conf_;
}

// optional .oneflow.MsraInitializerConf msra_conf = 8;
inline bool InitializerConf::has_msra_conf() const {
  return type_case() == kMsraConf;
}
inline void InitializerConf::set_has_msra_conf() {
  _oneof_case_[0] = kMsraConf;
}
inline void InitializerConf::clear_msra_conf() {
  if (has_msra_conf()) {
    delete type_.msra_conf_;
    clear_has_type();
  }
}
inline ::oneflow::MsraInitializerConf* InitializerConf::release_msra_conf() {
  // @@protoc_insertion_point(field_release:oneflow.InitializerConf.msra_conf)
  if (has_msra_conf()) {
    clear_has_type();
      ::oneflow::MsraInitializerConf* temp = type_.msra_conf_;
    type_.msra_conf_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::MsraInitializerConf& InitializerConf::msra_conf() const {
  // @@protoc_insertion_point(field_get:oneflow.InitializerConf.msra_conf)
  return has_msra_conf()
      ? *type_.msra_conf_
      : *reinterpret_cast< ::oneflow::MsraInitializerConf*>(&::oneflow::_MsraInitializerConf_default_instance_);
}
inline ::oneflow::MsraInitializerConf* InitializerConf::mutable_msra_conf() {
  if (!has_msra_conf()) {
    clear_type();
    set_has_msra_conf();
    type_.msra_conf_ = CreateMaybeMessage< ::oneflow::MsraInitializerConf >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.InitializerConf.msra_conf)
  return type_.msra_conf_;
}

// optional .oneflow.RangeInitializerConf range_conf = 9;
inline bool InitializerConf::has_range_conf() const {
  return type_case() == kRangeConf;
}
inline void InitializerConf::set_has_range_conf() {
  _oneof_case_[0] = kRangeConf;
}
inline void InitializerConf::clear_range_conf() {
  if (has_range_conf()) {
    delete type_.range_conf_;
    clear_has_type();
  }
}
inline ::oneflow::RangeInitializerConf* InitializerConf::release_range_conf() {
  // @@protoc_insertion_point(field_release:oneflow.InitializerConf.range_conf)
  if (has_range_conf()) {
    clear_has_type();
      ::oneflow::RangeInitializerConf* temp = type_.range_conf_;
    type_.range_conf_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::RangeInitializerConf& InitializerConf::range_conf() const {
  // @@protoc_insertion_point(field_get:oneflow.InitializerConf.range_conf)
  return has_range_conf()
      ? *type_.range_conf_
      : *reinterpret_cast< ::oneflow::RangeInitializerConf*>(&::oneflow::_RangeInitializerConf_default_instance_);
}
inline ::oneflow::RangeInitializerConf* InitializerConf::mutable_range_conf() {
  if (!has_range_conf()) {
    clear_type();
    set_has_range_conf();
    type_.range_conf_ = CreateMaybeMessage< ::oneflow::RangeInitializerConf >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.InitializerConf.range_conf)
  return type_.range_conf_;
}

// optional .oneflow.IntRangeInitializerConf int_range_conf = 10;
inline bool InitializerConf::has_int_range_conf() const {
  return type_case() == kIntRangeConf;
}
inline void InitializerConf::set_has_int_range_conf() {
  _oneof_case_[0] = kIntRangeConf;
}
inline void InitializerConf::clear_int_range_conf() {
  if (has_int_range_conf()) {
    delete type_.int_range_conf_;
    clear_has_type();
  }
}
inline ::oneflow::IntRangeInitializerConf* InitializerConf::release_int_range_conf() {
  // @@protoc_insertion_point(field_release:oneflow.InitializerConf.int_range_conf)
  if (has_int_range_conf()) {
    clear_has_type();
      ::oneflow::IntRangeInitializerConf* temp = type_.int_range_conf_;
    type_.int_range_conf_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::IntRangeInitializerConf& InitializerConf::int_range_conf() const {
  // @@protoc_insertion_point(field_get:oneflow.InitializerConf.int_range_conf)
  return has_int_range_conf()
      ? *type_.int_range_conf_
      : *reinterpret_cast< ::oneflow::IntRangeInitializerConf*>(&::oneflow::_IntRangeInitializerConf_default_instance_);
}
inline ::oneflow::IntRangeInitializerConf* InitializerConf::mutable_int_range_conf() {
  if (!has_int_range_conf()) {
    clear_type();
    set_has_int_range_conf();
    type_.int_range_conf_ = CreateMaybeMessage< ::oneflow::IntRangeInitializerConf >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.InitializerConf.int_range_conf)
  return type_.int_range_conf_;
}

// optional .oneflow.VarianceScalingInitializerConf variance_scaling_conf = 11;
inline bool InitializerConf::has_variance_scaling_conf() const {
  return type_case() == kVarianceScalingConf;
}
inline void InitializerConf::set_has_variance_scaling_conf() {
  _oneof_case_[0] = kVarianceScalingConf;
}
inline void InitializerConf::clear_variance_scaling_conf() {
  if (has_variance_scaling_conf()) {
    delete type_.variance_scaling_conf_;
    clear_has_type();
  }
}
inline ::oneflow::VarianceScalingInitializerConf* InitializerConf::release_variance_scaling_conf() {
  // @@protoc_insertion_point(field_release:oneflow.InitializerConf.variance_scaling_conf)
  if (has_variance_scaling_conf()) {
    clear_has_type();
      ::oneflow::VarianceScalingInitializerConf* temp = type_.variance_scaling_conf_;
    type_.variance_scaling_conf_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::VarianceScalingInitializerConf& InitializerConf::variance_scaling_conf() const {
  // @@protoc_insertion_point(field_get:oneflow.InitializerConf.variance_scaling_conf)
  return has_variance_scaling_conf()
      ? *type_.variance_scaling_conf_
      : *reinterpret_cast< ::oneflow::VarianceScalingInitializerConf*>(&::oneflow::_VarianceScalingInitializerConf_default_instance_);
}
inline ::oneflow::VarianceScalingInitializerConf* InitializerConf::mutable_variance_scaling_conf() {
  if (!has_variance_scaling_conf()) {
    clear_type();
    set_has_variance_scaling_conf();
    type_.variance_scaling_conf_ = CreateMaybeMessage< ::oneflow::VarianceScalingInitializerConf >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.InitializerConf.variance_scaling_conf)
  return type_.variance_scaling_conf_;
}

// optional .oneflow.EmptyInitializerConf empty_conf = 12;
inline bool InitializerConf::has_empty_conf() const {
  return type_case() == kEmptyConf;
}
inline void InitializerConf::set_has_empty_conf() {
  _oneof_case_[0] = kEmptyConf;
}
inline void InitializerConf::clear_empty_conf() {
  if (has_empty_conf()) {
    delete type_.empty_conf_;
    clear_has_type();
  }
}
inline ::oneflow::EmptyInitializerConf* InitializerConf::release_empty_conf() {
  // @@protoc_insertion_point(field_release:oneflow.InitializerConf.empty_conf)
  if (has_empty_conf()) {
    clear_has_type();
      ::oneflow::EmptyInitializerConf* temp = type_.empty_conf_;
    type_.empty_conf_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::oneflow::EmptyInitializerConf& InitializerConf::empty_conf() const {
  // @@protoc_insertion_point(field_get:oneflow.InitializerConf.empty_conf)
  return has_empty_conf()
      ? *type_.empty_conf_
      : *reinterpret_cast< ::oneflow::EmptyInitializerConf*>(&::oneflow::_EmptyInitializerConf_default_instance_);
}
inline ::oneflow::EmptyInitializerConf* InitializerConf::mutable_empty_conf() {
  if (!has_empty_conf()) {
    clear_type();
    set_has_empty_conf();
    type_.empty_conf_ = CreateMaybeMessage< ::oneflow::EmptyInitializerConf >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:oneflow.InitializerConf.empty_conf)
  return type_.empty_conf_;
}

inline bool InitializerConf::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void InitializerConf::clear_has_type() {
  _oneof_case_[0] = TYPE_NOT_SET;
}
inline InitializerConf::TypeCase InitializerConf::type_case() const {
  return InitializerConf::TypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// InitializeWithSnapshotConf

// required string path = 1;
inline bool InitializeWithSnapshotConf::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitializeWithSnapshotConf::clear_path() {
  path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& InitializeWithSnapshotConf::path() const {
  // @@protoc_insertion_point(field_get:oneflow.InitializeWithSnapshotConf.path)
  return path_.GetNoArena();
}
inline void InitializeWithSnapshotConf::set_path(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oneflow.InitializeWithSnapshotConf.path)
}
inline void InitializeWithSnapshotConf::set_path(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  path_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oneflow.InitializeWithSnapshotConf.path)
}
inline void InitializeWithSnapshotConf::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oneflow.InitializeWithSnapshotConf.path)
}
inline void InitializeWithSnapshotConf::set_path(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oneflow.InitializeWithSnapshotConf.path)
}
inline std::string* InitializeWithSnapshotConf::mutable_path() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:oneflow.InitializeWithSnapshotConf.path)
  return path_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* InitializeWithSnapshotConf::release_path() {
  // @@protoc_insertion_point(field_release:oneflow.InitializeWithSnapshotConf.path)
  if (!has_path()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return path_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void InitializeWithSnapshotConf::set_allocated_path(std::string* path) {
  if (path != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  path_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:oneflow.InitializeWithSnapshotConf.path)
}

// optional string key = 2;
inline bool InitializeWithSnapshotConf::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InitializeWithSnapshotConf::clear_key() {
  key_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& InitializeWithSnapshotConf::key() const {
  // @@protoc_insertion_point(field_get:oneflow.InitializeWithSnapshotConf.key)
  return key_.GetNoArena();
}
inline void InitializeWithSnapshotConf::set_key(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  key_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oneflow.InitializeWithSnapshotConf.key)
}
inline void InitializeWithSnapshotConf::set_key(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  key_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oneflow.InitializeWithSnapshotConf.key)
}
inline void InitializeWithSnapshotConf::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  key_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oneflow.InitializeWithSnapshotConf.key)
}
inline void InitializeWithSnapshotConf::set_key(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  key_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oneflow.InitializeWithSnapshotConf.key)
}
inline std::string* InitializeWithSnapshotConf::mutable_key() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:oneflow.InitializeWithSnapshotConf.key)
  return key_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* InitializeWithSnapshotConf::release_key() {
  // @@protoc_insertion_point(field_release:oneflow.InitializeWithSnapshotConf.key)
  if (!has_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return key_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void InitializeWithSnapshotConf::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  key_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:oneflow.InitializeWithSnapshotConf.key)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace oneflow

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::oneflow::VarianceNorm> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::oneflow::VarianceNorm>() {
  return ::oneflow::VarianceNorm_descriptor();
}
template <> struct is_proto_enum< ::oneflow::RandomDistribution> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::oneflow::RandomDistribution>() {
  return ::oneflow::RandomDistribution_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fjob_2finitializer_5fconf_2eproto
