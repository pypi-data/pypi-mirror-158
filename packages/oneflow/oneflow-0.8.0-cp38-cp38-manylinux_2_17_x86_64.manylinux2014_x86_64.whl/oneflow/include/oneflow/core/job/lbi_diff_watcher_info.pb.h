// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/job/lbi_diff_watcher_info.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fjob_2flbi_5fdiff_5fwatcher_5finfo_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fjob_2flbi_5fdiff_5fwatcher_5finfo_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "oneflow/core/register/logical_blob_id.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_oneflow_2fcore_2fjob_2flbi_5fdiff_5fwatcher_5finfo_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_oneflow_2fcore_2fjob_2flbi_5fdiff_5fwatcher_5finfo_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_oneflow_2fcore_2fjob_2flbi_5fdiff_5fwatcher_5finfo_2eproto;
namespace oneflow {
class LbiAndDiffWatcherUuidPair;
class LbiAndDiffWatcherUuidPairDefaultTypeInternal;
extern LbiAndDiffWatcherUuidPairDefaultTypeInternal _LbiAndDiffWatcherUuidPair_default_instance_;
class LbiAndDiffWatcherUuidPairList;
class LbiAndDiffWatcherUuidPairListDefaultTypeInternal;
extern LbiAndDiffWatcherUuidPairListDefaultTypeInternal _LbiAndDiffWatcherUuidPairList_default_instance_;
class LbiDiffWatcherInfo;
class LbiDiffWatcherInfoDefaultTypeInternal;
extern LbiDiffWatcherInfoDefaultTypeInternal _LbiDiffWatcherInfo_default_instance_;
class LbiDiffWatcherInfo_JobName2lbiAndWatcherUuidsEntry_DoNotUse;
class LbiDiffWatcherInfo_JobName2lbiAndWatcherUuidsEntry_DoNotUseDefaultTypeInternal;
extern LbiDiffWatcherInfo_JobName2lbiAndWatcherUuidsEntry_DoNotUseDefaultTypeInternal _LbiDiffWatcherInfo_JobName2lbiAndWatcherUuidsEntry_DoNotUse_default_instance_;
}  // namespace oneflow
PROTOBUF_NAMESPACE_OPEN
template<> ::oneflow::LbiAndDiffWatcherUuidPair* Arena::CreateMaybeMessage<::oneflow::LbiAndDiffWatcherUuidPair>(Arena*);
template<> ::oneflow::LbiAndDiffWatcherUuidPairList* Arena::CreateMaybeMessage<::oneflow::LbiAndDiffWatcherUuidPairList>(Arena*);
template<> ::oneflow::LbiDiffWatcherInfo* Arena::CreateMaybeMessage<::oneflow::LbiDiffWatcherInfo>(Arena*);
template<> ::oneflow::LbiDiffWatcherInfo_JobName2lbiAndWatcherUuidsEntry_DoNotUse* Arena::CreateMaybeMessage<::oneflow::LbiDiffWatcherInfo_JobName2lbiAndWatcherUuidsEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace oneflow {

// ===================================================================

class LbiAndDiffWatcherUuidPair :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.LbiAndDiffWatcherUuidPair) */ {
 public:
  LbiAndDiffWatcherUuidPair();
  virtual ~LbiAndDiffWatcherUuidPair();

  LbiAndDiffWatcherUuidPair(const LbiAndDiffWatcherUuidPair& from);
  LbiAndDiffWatcherUuidPair(LbiAndDiffWatcherUuidPair&& from) noexcept
    : LbiAndDiffWatcherUuidPair() {
    *this = ::std::move(from);
  }

  inline LbiAndDiffWatcherUuidPair& operator=(const LbiAndDiffWatcherUuidPair& from) {
    CopyFrom(from);
    return *this;
  }
  inline LbiAndDiffWatcherUuidPair& operator=(LbiAndDiffWatcherUuidPair&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LbiAndDiffWatcherUuidPair& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LbiAndDiffWatcherUuidPair* internal_default_instance() {
    return reinterpret_cast<const LbiAndDiffWatcherUuidPair*>(
               &_LbiAndDiffWatcherUuidPair_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(LbiAndDiffWatcherUuidPair& a, LbiAndDiffWatcherUuidPair& b) {
    a.Swap(&b);
  }
  inline void Swap(LbiAndDiffWatcherUuidPair* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LbiAndDiffWatcherUuidPair* New() const final {
    return CreateMaybeMessage<LbiAndDiffWatcherUuidPair>(nullptr);
  }

  LbiAndDiffWatcherUuidPair* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LbiAndDiffWatcherUuidPair>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LbiAndDiffWatcherUuidPair& from);
  void MergeFrom(const LbiAndDiffWatcherUuidPair& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LbiAndDiffWatcherUuidPair* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.LbiAndDiffWatcherUuidPair";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2flbi_5fdiff_5fwatcher_5finfo_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2flbi_5fdiff_5fwatcher_5finfo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWatcherUuidFieldNumber = 2,
    kLbiFieldNumber = 1,
  };
  // required string watcher_uuid = 2;
  bool has_watcher_uuid() const;
  void clear_watcher_uuid();
  const std::string& watcher_uuid() const;
  void set_watcher_uuid(const std::string& value);
  void set_watcher_uuid(std::string&& value);
  void set_watcher_uuid(const char* value);
  void set_watcher_uuid(const char* value, size_t size);
  std::string* mutable_watcher_uuid();
  std::string* release_watcher_uuid();
  void set_allocated_watcher_uuid(std::string* watcher_uuid);

  // required .oneflow.LogicalBlobId lbi = 1;
  bool has_lbi() const;
  void clear_lbi();
  const ::oneflow::LogicalBlobId& lbi() const;
  ::oneflow::LogicalBlobId* release_lbi();
  ::oneflow::LogicalBlobId* mutable_lbi();
  void set_allocated_lbi(::oneflow::LogicalBlobId* lbi);

  // @@protoc_insertion_point(class_scope:oneflow.LbiAndDiffWatcherUuidPair)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr watcher_uuid_;
  ::oneflow::LogicalBlobId* lbi_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2flbi_5fdiff_5fwatcher_5finfo_2eproto;
};
// -------------------------------------------------------------------

class LbiAndDiffWatcherUuidPairList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.LbiAndDiffWatcherUuidPairList) */ {
 public:
  LbiAndDiffWatcherUuidPairList();
  virtual ~LbiAndDiffWatcherUuidPairList();

  LbiAndDiffWatcherUuidPairList(const LbiAndDiffWatcherUuidPairList& from);
  LbiAndDiffWatcherUuidPairList(LbiAndDiffWatcherUuidPairList&& from) noexcept
    : LbiAndDiffWatcherUuidPairList() {
    *this = ::std::move(from);
  }

  inline LbiAndDiffWatcherUuidPairList& operator=(const LbiAndDiffWatcherUuidPairList& from) {
    CopyFrom(from);
    return *this;
  }
  inline LbiAndDiffWatcherUuidPairList& operator=(LbiAndDiffWatcherUuidPairList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LbiAndDiffWatcherUuidPairList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LbiAndDiffWatcherUuidPairList* internal_default_instance() {
    return reinterpret_cast<const LbiAndDiffWatcherUuidPairList*>(
               &_LbiAndDiffWatcherUuidPairList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(LbiAndDiffWatcherUuidPairList& a, LbiAndDiffWatcherUuidPairList& b) {
    a.Swap(&b);
  }
  inline void Swap(LbiAndDiffWatcherUuidPairList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LbiAndDiffWatcherUuidPairList* New() const final {
    return CreateMaybeMessage<LbiAndDiffWatcherUuidPairList>(nullptr);
  }

  LbiAndDiffWatcherUuidPairList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LbiAndDiffWatcherUuidPairList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LbiAndDiffWatcherUuidPairList& from);
  void MergeFrom(const LbiAndDiffWatcherUuidPairList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LbiAndDiffWatcherUuidPairList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.LbiAndDiffWatcherUuidPairList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2flbi_5fdiff_5fwatcher_5finfo_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2flbi_5fdiff_5fwatcher_5finfo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLbiAndUuidPairFieldNumber = 1,
  };
  // repeated .oneflow.LbiAndDiffWatcherUuidPair lbi_and_uuid_pair = 1;
  int lbi_and_uuid_pair_size() const;
  void clear_lbi_and_uuid_pair();
  ::oneflow::LbiAndDiffWatcherUuidPair* mutable_lbi_and_uuid_pair(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::LbiAndDiffWatcherUuidPair >*
      mutable_lbi_and_uuid_pair();
  const ::oneflow::LbiAndDiffWatcherUuidPair& lbi_and_uuid_pair(int index) const;
  ::oneflow::LbiAndDiffWatcherUuidPair* add_lbi_and_uuid_pair();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::LbiAndDiffWatcherUuidPair >&
      lbi_and_uuid_pair() const;

  // @@protoc_insertion_point(class_scope:oneflow.LbiAndDiffWatcherUuidPairList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::LbiAndDiffWatcherUuidPair > lbi_and_uuid_pair_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2flbi_5fdiff_5fwatcher_5finfo_2eproto;
};
// -------------------------------------------------------------------

class LbiDiffWatcherInfo_JobName2lbiAndWatcherUuidsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<LbiDiffWatcherInfo_JobName2lbiAndWatcherUuidsEntry_DoNotUse, 
    std::string, ::oneflow::LbiAndDiffWatcherUuidPairList,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<LbiDiffWatcherInfo_JobName2lbiAndWatcherUuidsEntry_DoNotUse, 
    std::string, ::oneflow::LbiAndDiffWatcherUuidPairList,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  LbiDiffWatcherInfo_JobName2lbiAndWatcherUuidsEntry_DoNotUse();
  LbiDiffWatcherInfo_JobName2lbiAndWatcherUuidsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const LbiDiffWatcherInfo_JobName2lbiAndWatcherUuidsEntry_DoNotUse& other);
  static const LbiDiffWatcherInfo_JobName2lbiAndWatcherUuidsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const LbiDiffWatcherInfo_JobName2lbiAndWatcherUuidsEntry_DoNotUse*>(&_LbiDiffWatcherInfo_JobName2lbiAndWatcherUuidsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
#ifndef NDEBUG
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
       s->data(), s->size(), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "oneflow.LbiDiffWatcherInfo.JobName2lbiAndWatcherUuidsEntry.key");
#endif
    return true;
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2flbi_5fdiff_5fwatcher_5finfo_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2flbi_5fdiff_5fwatcher_5finfo_2eproto.file_level_metadata[2];
  }

  public:
};

// -------------------------------------------------------------------

class LbiDiffWatcherInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.LbiDiffWatcherInfo) */ {
 public:
  LbiDiffWatcherInfo();
  virtual ~LbiDiffWatcherInfo();

  LbiDiffWatcherInfo(const LbiDiffWatcherInfo& from);
  LbiDiffWatcherInfo(LbiDiffWatcherInfo&& from) noexcept
    : LbiDiffWatcherInfo() {
    *this = ::std::move(from);
  }

  inline LbiDiffWatcherInfo& operator=(const LbiDiffWatcherInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline LbiDiffWatcherInfo& operator=(LbiDiffWatcherInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LbiDiffWatcherInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LbiDiffWatcherInfo* internal_default_instance() {
    return reinterpret_cast<const LbiDiffWatcherInfo*>(
               &_LbiDiffWatcherInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(LbiDiffWatcherInfo& a, LbiDiffWatcherInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(LbiDiffWatcherInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LbiDiffWatcherInfo* New() const final {
    return CreateMaybeMessage<LbiDiffWatcherInfo>(nullptr);
  }

  LbiDiffWatcherInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LbiDiffWatcherInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LbiDiffWatcherInfo& from);
  void MergeFrom(const LbiDiffWatcherInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LbiDiffWatcherInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.LbiDiffWatcherInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2flbi_5fdiff_5fwatcher_5finfo_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2flbi_5fdiff_5fwatcher_5finfo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kJobName2LbiAndWatcherUuidsFieldNumber = 1,
  };
  // map<string, .oneflow.LbiAndDiffWatcherUuidPairList> job_name2lbi_and_watcher_uuids = 1;
  int job_name2lbi_and_watcher_uuids_size() const;
  void clear_job_name2lbi_and_watcher_uuids();
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::LbiAndDiffWatcherUuidPairList >&
      job_name2lbi_and_watcher_uuids() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::LbiAndDiffWatcherUuidPairList >*
      mutable_job_name2lbi_and_watcher_uuids();

  // @@protoc_insertion_point(class_scope:oneflow.LbiDiffWatcherInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      LbiDiffWatcherInfo_JobName2lbiAndWatcherUuidsEntry_DoNotUse,
      std::string, ::oneflow::LbiAndDiffWatcherUuidPairList,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > job_name2lbi_and_watcher_uuids_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2flbi_5fdiff_5fwatcher_5finfo_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LbiAndDiffWatcherUuidPair

// required .oneflow.LogicalBlobId lbi = 1;
inline bool LbiAndDiffWatcherUuidPair::has_lbi() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::oneflow::LogicalBlobId& LbiAndDiffWatcherUuidPair::lbi() const {
  const ::oneflow::LogicalBlobId* p = lbi_;
  // @@protoc_insertion_point(field_get:oneflow.LbiAndDiffWatcherUuidPair.lbi)
  return p != nullptr ? *p : *reinterpret_cast<const ::oneflow::LogicalBlobId*>(
      &::oneflow::_LogicalBlobId_default_instance_);
}
inline ::oneflow::LogicalBlobId* LbiAndDiffWatcherUuidPair::release_lbi() {
  // @@protoc_insertion_point(field_release:oneflow.LbiAndDiffWatcherUuidPair.lbi)
  _has_bits_[0] &= ~0x00000002u;
  ::oneflow::LogicalBlobId* temp = lbi_;
  lbi_ = nullptr;
  return temp;
}
inline ::oneflow::LogicalBlobId* LbiAndDiffWatcherUuidPair::mutable_lbi() {
  _has_bits_[0] |= 0x00000002u;
  if (lbi_ == nullptr) {
    auto* p = CreateMaybeMessage<::oneflow::LogicalBlobId>(GetArenaNoVirtual());
    lbi_ = p;
  }
  // @@protoc_insertion_point(field_mutable:oneflow.LbiAndDiffWatcherUuidPair.lbi)
  return lbi_;
}
inline void LbiAndDiffWatcherUuidPair::set_allocated_lbi(::oneflow::LogicalBlobId* lbi) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(lbi_);
  }
  if (lbi) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      lbi = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, lbi, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  lbi_ = lbi;
  // @@protoc_insertion_point(field_set_allocated:oneflow.LbiAndDiffWatcherUuidPair.lbi)
}

// required string watcher_uuid = 2;
inline bool LbiAndDiffWatcherUuidPair::has_watcher_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LbiAndDiffWatcherUuidPair::clear_watcher_uuid() {
  watcher_uuid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& LbiAndDiffWatcherUuidPair::watcher_uuid() const {
  // @@protoc_insertion_point(field_get:oneflow.LbiAndDiffWatcherUuidPair.watcher_uuid)
  return watcher_uuid_.GetNoArena();
}
inline void LbiAndDiffWatcherUuidPair::set_watcher_uuid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  watcher_uuid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oneflow.LbiAndDiffWatcherUuidPair.watcher_uuid)
}
inline void LbiAndDiffWatcherUuidPair::set_watcher_uuid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  watcher_uuid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oneflow.LbiAndDiffWatcherUuidPair.watcher_uuid)
}
inline void LbiAndDiffWatcherUuidPair::set_watcher_uuid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  watcher_uuid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oneflow.LbiAndDiffWatcherUuidPair.watcher_uuid)
}
inline void LbiAndDiffWatcherUuidPair::set_watcher_uuid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  watcher_uuid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oneflow.LbiAndDiffWatcherUuidPair.watcher_uuid)
}
inline std::string* LbiAndDiffWatcherUuidPair::mutable_watcher_uuid() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:oneflow.LbiAndDiffWatcherUuidPair.watcher_uuid)
  return watcher_uuid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LbiAndDiffWatcherUuidPair::release_watcher_uuid() {
  // @@protoc_insertion_point(field_release:oneflow.LbiAndDiffWatcherUuidPair.watcher_uuid)
  if (!has_watcher_uuid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return watcher_uuid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LbiAndDiffWatcherUuidPair::set_allocated_watcher_uuid(std::string* watcher_uuid) {
  if (watcher_uuid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  watcher_uuid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), watcher_uuid);
  // @@protoc_insertion_point(field_set_allocated:oneflow.LbiAndDiffWatcherUuidPair.watcher_uuid)
}

// -------------------------------------------------------------------

// LbiAndDiffWatcherUuidPairList

// repeated .oneflow.LbiAndDiffWatcherUuidPair lbi_and_uuid_pair = 1;
inline int LbiAndDiffWatcherUuidPairList::lbi_and_uuid_pair_size() const {
  return lbi_and_uuid_pair_.size();
}
inline void LbiAndDiffWatcherUuidPairList::clear_lbi_and_uuid_pair() {
  lbi_and_uuid_pair_.Clear();
}
inline ::oneflow::LbiAndDiffWatcherUuidPair* LbiAndDiffWatcherUuidPairList::mutable_lbi_and_uuid_pair(int index) {
  // @@protoc_insertion_point(field_mutable:oneflow.LbiAndDiffWatcherUuidPairList.lbi_and_uuid_pair)
  return lbi_and_uuid_pair_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::LbiAndDiffWatcherUuidPair >*
LbiAndDiffWatcherUuidPairList::mutable_lbi_and_uuid_pair() {
  // @@protoc_insertion_point(field_mutable_list:oneflow.LbiAndDiffWatcherUuidPairList.lbi_and_uuid_pair)
  return &lbi_and_uuid_pair_;
}
inline const ::oneflow::LbiAndDiffWatcherUuidPair& LbiAndDiffWatcherUuidPairList::lbi_and_uuid_pair(int index) const {
  // @@protoc_insertion_point(field_get:oneflow.LbiAndDiffWatcherUuidPairList.lbi_and_uuid_pair)
  return lbi_and_uuid_pair_.Get(index);
}
inline ::oneflow::LbiAndDiffWatcherUuidPair* LbiAndDiffWatcherUuidPairList::add_lbi_and_uuid_pair() {
  // @@protoc_insertion_point(field_add:oneflow.LbiAndDiffWatcherUuidPairList.lbi_and_uuid_pair)
  return lbi_and_uuid_pair_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::oneflow::LbiAndDiffWatcherUuidPair >&
LbiAndDiffWatcherUuidPairList::lbi_and_uuid_pair() const {
  // @@protoc_insertion_point(field_list:oneflow.LbiAndDiffWatcherUuidPairList.lbi_and_uuid_pair)
  return lbi_and_uuid_pair_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// LbiDiffWatcherInfo

// map<string, .oneflow.LbiAndDiffWatcherUuidPairList> job_name2lbi_and_watcher_uuids = 1;
inline int LbiDiffWatcherInfo::job_name2lbi_and_watcher_uuids_size() const {
  return job_name2lbi_and_watcher_uuids_.size();
}
inline void LbiDiffWatcherInfo::clear_job_name2lbi_and_watcher_uuids() {
  job_name2lbi_and_watcher_uuids_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::LbiAndDiffWatcherUuidPairList >&
LbiDiffWatcherInfo::job_name2lbi_and_watcher_uuids() const {
  // @@protoc_insertion_point(field_map:oneflow.LbiDiffWatcherInfo.job_name2lbi_and_watcher_uuids)
  return job_name2lbi_and_watcher_uuids_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::LbiAndDiffWatcherUuidPairList >*
LbiDiffWatcherInfo::mutable_job_name2lbi_and_watcher_uuids() {
  // @@protoc_insertion_point(field_mutable_map:oneflow.LbiDiffWatcherInfo.job_name2lbi_and_watcher_uuids)
  return job_name2lbi_and_watcher_uuids_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace oneflow

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fjob_2flbi_5fdiff_5fwatcher_5finfo_2eproto
