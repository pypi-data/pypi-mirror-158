// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oneflow/core/job/mirrored_parallel.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fjob_2fmirrored_5fparallel_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fjob_2fmirrored_5fparallel_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_oneflow_2fcore_2fjob_2fmirrored_5fparallel_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_oneflow_2fcore_2fjob_2fmirrored_5fparallel_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_oneflow_2fcore_2fjob_2fmirrored_5fparallel_2eproto;
namespace oneflow {
class MirroredParallel;
class MirroredParallelDefaultTypeInternal;
extern MirroredParallelDefaultTypeInternal _MirroredParallel_default_instance_;
class MirroredSignature;
class MirroredSignatureDefaultTypeInternal;
extern MirroredSignatureDefaultTypeInternal _MirroredSignature_default_instance_;
class MirroredSignature_BnInOp2optMirroredParallelEntry_DoNotUse;
class MirroredSignature_BnInOp2optMirroredParallelEntry_DoNotUseDefaultTypeInternal;
extern MirroredSignature_BnInOp2optMirroredParallelEntry_DoNotUseDefaultTypeInternal _MirroredSignature_BnInOp2optMirroredParallelEntry_DoNotUse_default_instance_;
class OptMirroredParallel;
class OptMirroredParallelDefaultTypeInternal;
extern OptMirroredParallelDefaultTypeInternal _OptMirroredParallel_default_instance_;
}  // namespace oneflow
PROTOBUF_NAMESPACE_OPEN
template<> ::oneflow::MirroredParallel* Arena::CreateMaybeMessage<::oneflow::MirroredParallel>(Arena*);
template<> ::oneflow::MirroredSignature* Arena::CreateMaybeMessage<::oneflow::MirroredSignature>(Arena*);
template<> ::oneflow::MirroredSignature_BnInOp2optMirroredParallelEntry_DoNotUse* Arena::CreateMaybeMessage<::oneflow::MirroredSignature_BnInOp2optMirroredParallelEntry_DoNotUse>(Arena*);
template<> ::oneflow::OptMirroredParallel* Arena::CreateMaybeMessage<::oneflow::OptMirroredParallel>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace oneflow {

// ===================================================================

class MirroredParallel :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.MirroredParallel) */ {
 public:
  MirroredParallel();
  virtual ~MirroredParallel();

  MirroredParallel(const MirroredParallel& from);
  MirroredParallel(MirroredParallel&& from) noexcept
    : MirroredParallel() {
    *this = ::std::move(from);
  }

  inline MirroredParallel& operator=(const MirroredParallel& from) {
    CopyFrom(from);
    return *this;
  }
  inline MirroredParallel& operator=(MirroredParallel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MirroredParallel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MirroredParallel* internal_default_instance() {
    return reinterpret_cast<const MirroredParallel*>(
               &_MirroredParallel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MirroredParallel& a, MirroredParallel& b) {
    a.Swap(&b);
  }
  inline void Swap(MirroredParallel* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MirroredParallel* New() const final {
    return CreateMaybeMessage<MirroredParallel>(nullptr);
  }

  MirroredParallel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MirroredParallel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MirroredParallel& from);
  void MergeFrom(const MirroredParallel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MirroredParallel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.MirroredParallel";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2fmirrored_5fparallel_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2fmirrored_5fparallel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:oneflow.MirroredParallel)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2fmirrored_5fparallel_2eproto;
};
// -------------------------------------------------------------------

class OptMirroredParallel :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.OptMirroredParallel) */ {
 public:
  OptMirroredParallel();
  virtual ~OptMirroredParallel();

  OptMirroredParallel(const OptMirroredParallel& from);
  OptMirroredParallel(OptMirroredParallel&& from) noexcept
    : OptMirroredParallel() {
    *this = ::std::move(from);
  }

  inline OptMirroredParallel& operator=(const OptMirroredParallel& from) {
    CopyFrom(from);
    return *this;
  }
  inline OptMirroredParallel& operator=(OptMirroredParallel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OptMirroredParallel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OptMirroredParallel* internal_default_instance() {
    return reinterpret_cast<const OptMirroredParallel*>(
               &_OptMirroredParallel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(OptMirroredParallel& a, OptMirroredParallel& b) {
    a.Swap(&b);
  }
  inline void Swap(OptMirroredParallel* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OptMirroredParallel* New() const final {
    return CreateMaybeMessage<OptMirroredParallel>(nullptr);
  }

  OptMirroredParallel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OptMirroredParallel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OptMirroredParallel& from);
  void MergeFrom(const OptMirroredParallel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OptMirroredParallel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.OptMirroredParallel";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2fmirrored_5fparallel_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2fmirrored_5fparallel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMirroredParallelFieldNumber = 1,
  };
  // optional .oneflow.MirroredParallel mirrored_parallel = 1;
  bool has_mirrored_parallel() const;
  void clear_mirrored_parallel();
  const ::oneflow::MirroredParallel& mirrored_parallel() const;
  ::oneflow::MirroredParallel* release_mirrored_parallel();
  ::oneflow::MirroredParallel* mutable_mirrored_parallel();
  void set_allocated_mirrored_parallel(::oneflow::MirroredParallel* mirrored_parallel);

  // @@protoc_insertion_point(class_scope:oneflow.OptMirroredParallel)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::oneflow::MirroredParallel* mirrored_parallel_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2fmirrored_5fparallel_2eproto;
};
// -------------------------------------------------------------------

class MirroredSignature_BnInOp2optMirroredParallelEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<MirroredSignature_BnInOp2optMirroredParallelEntry_DoNotUse, 
    std::string, ::oneflow::OptMirroredParallel,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<MirroredSignature_BnInOp2optMirroredParallelEntry_DoNotUse, 
    std::string, ::oneflow::OptMirroredParallel,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  MirroredSignature_BnInOp2optMirroredParallelEntry_DoNotUse();
  MirroredSignature_BnInOp2optMirroredParallelEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const MirroredSignature_BnInOp2optMirroredParallelEntry_DoNotUse& other);
  static const MirroredSignature_BnInOp2optMirroredParallelEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MirroredSignature_BnInOp2optMirroredParallelEntry_DoNotUse*>(&_MirroredSignature_BnInOp2optMirroredParallelEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
#ifndef NDEBUG
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
       s->data(), s->size(), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "oneflow.MirroredSignature.BnInOp2optMirroredParallelEntry.key");
#endif
    return true;
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2fmirrored_5fparallel_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2fmirrored_5fparallel_2eproto.file_level_metadata[2];
  }

  public:
};

// -------------------------------------------------------------------

class MirroredSignature :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:oneflow.MirroredSignature) */ {
 public:
  MirroredSignature();
  virtual ~MirroredSignature();

  MirroredSignature(const MirroredSignature& from);
  MirroredSignature(MirroredSignature&& from) noexcept
    : MirroredSignature() {
    *this = ::std::move(from);
  }

  inline MirroredSignature& operator=(const MirroredSignature& from) {
    CopyFrom(from);
    return *this;
  }
  inline MirroredSignature& operator=(MirroredSignature&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MirroredSignature& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MirroredSignature* internal_default_instance() {
    return reinterpret_cast<const MirroredSignature*>(
               &_MirroredSignature_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MirroredSignature& a, MirroredSignature& b) {
    a.Swap(&b);
  }
  inline void Swap(MirroredSignature* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MirroredSignature* New() const final {
    return CreateMaybeMessage<MirroredSignature>(nullptr);
  }

  MirroredSignature* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MirroredSignature>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MirroredSignature& from);
  void MergeFrom(const MirroredSignature& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MirroredSignature* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "oneflow.MirroredSignature";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_oneflow_2fcore_2fjob_2fmirrored_5fparallel_2eproto);
    return ::descriptor_table_oneflow_2fcore_2fjob_2fmirrored_5fparallel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kBnInOp2OptMirroredParallelFieldNumber = 1,
  };
  // map<string, .oneflow.OptMirroredParallel> bn_in_op2opt_mirrored_parallel = 1;
  int bn_in_op2opt_mirrored_parallel_size() const;
  void clear_bn_in_op2opt_mirrored_parallel();
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::OptMirroredParallel >&
      bn_in_op2opt_mirrored_parallel() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::OptMirroredParallel >*
      mutable_bn_in_op2opt_mirrored_parallel();

  // @@protoc_insertion_point(class_scope:oneflow.MirroredSignature)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      MirroredSignature_BnInOp2optMirroredParallelEntry_DoNotUse,
      std::string, ::oneflow::OptMirroredParallel,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > bn_in_op2opt_mirrored_parallel_;
  friend struct ::TableStruct_oneflow_2fcore_2fjob_2fmirrored_5fparallel_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MirroredParallel

// -------------------------------------------------------------------

// OptMirroredParallel

// optional .oneflow.MirroredParallel mirrored_parallel = 1;
inline bool OptMirroredParallel::has_mirrored_parallel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OptMirroredParallel::clear_mirrored_parallel() {
  if (mirrored_parallel_ != nullptr) mirrored_parallel_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::oneflow::MirroredParallel& OptMirroredParallel::mirrored_parallel() const {
  const ::oneflow::MirroredParallel* p = mirrored_parallel_;
  // @@protoc_insertion_point(field_get:oneflow.OptMirroredParallel.mirrored_parallel)
  return p != nullptr ? *p : *reinterpret_cast<const ::oneflow::MirroredParallel*>(
      &::oneflow::_MirroredParallel_default_instance_);
}
inline ::oneflow::MirroredParallel* OptMirroredParallel::release_mirrored_parallel() {
  // @@protoc_insertion_point(field_release:oneflow.OptMirroredParallel.mirrored_parallel)
  _has_bits_[0] &= ~0x00000001u;
  ::oneflow::MirroredParallel* temp = mirrored_parallel_;
  mirrored_parallel_ = nullptr;
  return temp;
}
inline ::oneflow::MirroredParallel* OptMirroredParallel::mutable_mirrored_parallel() {
  _has_bits_[0] |= 0x00000001u;
  if (mirrored_parallel_ == nullptr) {
    auto* p = CreateMaybeMessage<::oneflow::MirroredParallel>(GetArenaNoVirtual());
    mirrored_parallel_ = p;
  }
  // @@protoc_insertion_point(field_mutable:oneflow.OptMirroredParallel.mirrored_parallel)
  return mirrored_parallel_;
}
inline void OptMirroredParallel::set_allocated_mirrored_parallel(::oneflow::MirroredParallel* mirrored_parallel) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete mirrored_parallel_;
  }
  if (mirrored_parallel) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mirrored_parallel = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mirrored_parallel, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  mirrored_parallel_ = mirrored_parallel;
  // @@protoc_insertion_point(field_set_allocated:oneflow.OptMirroredParallel.mirrored_parallel)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MirroredSignature

// map<string, .oneflow.OptMirroredParallel> bn_in_op2opt_mirrored_parallel = 1;
inline int MirroredSignature::bn_in_op2opt_mirrored_parallel_size() const {
  return bn_in_op2opt_mirrored_parallel_.size();
}
inline void MirroredSignature::clear_bn_in_op2opt_mirrored_parallel() {
  bn_in_op2opt_mirrored_parallel_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::OptMirroredParallel >&
MirroredSignature::bn_in_op2opt_mirrored_parallel() const {
  // @@protoc_insertion_point(field_map:oneflow.MirroredSignature.bn_in_op2opt_mirrored_parallel)
  return bn_in_op2opt_mirrored_parallel_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::oneflow::OptMirroredParallel >*
MirroredSignature::mutable_bn_in_op2opt_mirrored_parallel() {
  // @@protoc_insertion_point(field_mutable_map:oneflow.MirroredSignature.bn_in_op2opt_mirrored_parallel)
  return bn_in_op2opt_mirrored_parallel_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace oneflow

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_oneflow_2fcore_2fjob_2fmirrored_5fparallel_2eproto
