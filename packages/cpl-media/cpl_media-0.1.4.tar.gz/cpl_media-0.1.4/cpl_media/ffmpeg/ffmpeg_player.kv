#:import partial functools.partial
#:import formats_out ffpyplayer.tools.formats_out
#:import formats_in ffpyplayer.tools.formats_in
#:import pix_fmts ffpyplayer.tools.pix_fmts
#:import codecs_dec ffpyplayer.tools.codecs_dec
#:import codecs_enc ffpyplayer.tools.codecs_enc


<FFmpegSettingsWidget>:
    orientation: 'vertical'
    spacing: '5dp'
    size_hint_min_x: self.minimum_width
    size_hint_y: None
    height: self.minimum_height
    disabled: self.player.play_state != 'none'
    BoxLayout:
        spacing: '5dp'
        height: self.minimum_height
        size_hint_y: None
        size_hint_min_x: self.minimum_width
        Widget
        FlatImageToggleButton:
            source: 'radiobox-marked.png' if self.state == 'down' else 'radiobox-blank.png'
            flat_color: app.theme.accent
            state: file_label.state
            on_state: file_label.state = self.state
        LightThemedToggleButton:
            id: file_label
            text: 'Video file'
            bold: True
            padding: '2dp', '2dp'
            size_hint: None, None
            size: self.texture_size
            state: 'down' if not root.player.use_dshow else 'normal'
            on_state:
                root.player.use_dshow = self.state != 'down'
                screen_manager.current = 'dshow' if root.player.use_dshow else 'other'
            center_texture: True
        FlatImageToggleButton:
            source: 'radiobox-marked.png' if self.state == 'down' else 'radiobox-blank.png'
            flat_color: app.theme.accent
            state: dshow_label.state
            on_state: dshow_label.state = self.state
        LightThemedToggleButton:
            id: dshow_label
            text: 'USB-cam'
            bold: True
            padding: '2dp', '2dp'
            size_hint: None, None
            size: self.texture_size
            state: 'down' if root.player.use_dshow else 'normal'
            on_state:
                root.player.use_dshow = self.state == 'down'
                screen_manager.current = 'dshow' if root.player.use_dshow else 'other'
            center_texture: True
        Widget
    FlatLabel:
        text: 'Device settings:'
        height: self.texture_size[1]
        size_hint_y: None
        flat_color: app.theme.text_primary
        bold: True
    ScreenManager:
        id: screen_manager
        size_hint_min_x: max(dshow.minimum_width, other.minimum_width)
        size_hint_y: None
        height: dshow.minimum_height if self.current == 'dshow' else other.minimum_height
        on_kv_post: self.current = 'dshow' if root.player.use_dshow else 'other'
        Screen:
            name: 'dshow'
            GridLayout:
                id: dshow
                size_hint_y: None
                height: self.minimum_height
                size_hint_min_x: self.minimum_width
                padding: '5dp'
                spacing: '10dp'
                cols: 2
                SizedThemedLabel:
                    text: 'Camera:'
                BoxLayout:
                    size_hint_min_x: self.minimum_width
                    spacing: '5dp'
                    FlatAccentImageButton:
                        source: 'flat_refresh.png'
                        on_release: root.player.refresh_dshow()
                    ThemedSpinner:
                        id: dshow_name
                        values: list(root.player.dshow_names)
                        text: root.player.dshow_filename
                        size_hint_min_x: max(self.minimum_width, dp(50))
                        on_text:
                            root.player.dshow_filename = self.text
                            root.player.update_dshow_file()
                SizedThemedLabel:
                    text: 'Options:'
                ThemedSpinner:
                    id: dshow_opts
                    values: list(root.player.dshow_opts[dshow_name.text]) if dshow_name.text else []
                    text: root.player.dshow_opt
                    size_hint_min_x: max(self.minimum_width, dp(50))
                    on_text: root.player.dshow_opt = self.text
                SizedThemedLabel:
                    text: 'Frame rate:'
                FlatSizedTextInput:
                    text: str(root.player.dshow_rate) if root.player.dshow_rate else ''
                    input_filter: 'float'
                    hint_text: 'fps'
                    size_hint_min_x: '60dp'
                    background_color: app.theme.primary_light
                    on_focus: if not self.focus: root.player.dshow_rate = float(self.text) if self.text else 0
                    padding: 0
        Screen:
            name: 'other'
            GridLayout:
                id: other
                size_hint_y: None
                height: self.minimum_height
                size_hint_min_x: self.minimum_width
                padding: '5dp'
                spacing: '10dp'
                cols: 2
                SizedThemedLabel:
                    text: 'Filename:'
                BoxLayout:
                    size_hint_y: None
                    height: self.minimum_height
                    size_hint_min_x: self.minimum_width
                    spacing: '5dp'
                    FlatImageButton:
                        scale_down_color: True
                        source: 'flat_folder.png'
                        flat_color: app.theme.accent
                        on_release: app.open_filechooser(callback=partial(root.set_filename, filename), target=root.player.play_filename, title='Select file')
                    FlatSizedTextInput:
                        id: filename
                        text: root.player.play_filename
                        background_color: app.theme.primary_light
                        hint_text: 'filename'
                        on_text: root.player.play_filename = self.text
                        size_hint_min_x: '100dp'
                        padding: 0
                SizedThemedLabel:
                    text: 'Media Format:'
                ThemedSpinner:
                    values: ['']
                    text:  root.player.file_fmt
                    size_hint_min_x: max(self.minimum_width, dp(100))
                    on_text: root.player.file_fmt = self.text
                    on_touch_down: if self.collide_point(*args[1].pos) and len(self.values) == 1: self.values = [''] + formats_in
                SizedThemedLabel:
                    text: 'Video Codec:'
                ThemedSpinner:
                    values: ['']
                    text:  root.player.icodec
                    size_hint_min_x: max(self.minimum_width, dp(100))
                    on_text: root.player.icodec = self.text
                    on_touch_down: if self.collide_point(*args[1].pos) and len(self.values) == 1: self.values = [''] + codecs_dec
    FlatLabel:
        text: 'Customize output:'
        height: self.texture_size[1]
        size_hint_y: None
        flat_color: app.theme.text_primary
        bold: True
    GridLayout:
        id: dshow
        size_hint_y: None
        height: self.minimum_height
        size_hint_min_x: self.minimum_width
        padding: '5dp'
        spacing: '10dp'
        cols: 2
        SizedThemedLabel:
            text: 'Pixel format:'
        ThemedSpinner:
            id: pix_fmt
            values: ['---']
            text: (root.player.metadata_play.fmt or '---') if root.player.metadata_play else '---'
            size_hint_min_x: max(self.minimum_width, dp(50))
            on_text: root.player._set_metadata_play(pix_fmt.text if pix_fmt.text != '---' else '', int(input_w.text or 0), int(input_h.text or 0))
            on_touch_down: if self.collide_point(*args[1].pos) and len(self.values) == 1: self.values = (['---'] + pix_fmts)
        SizedThemedLabel:
            text: 'Width:'
        FlatSizedTextInput:
            id: input_w
            text: str(root.player.metadata_play.w) if root.player.metadata_play and root.player.metadata_play.w else ''
            background_color: app.theme.primary_light
            hint_text: 'width'
            on_text: root.player._set_metadata_play(pix_fmt.text if pix_fmt.text != '---' else '', int(input_w.text or 0), int(input_h.text or 0))
            size_hint_min_x: '60dp'
            padding: 0
        SizedThemedLabel:
            text: 'Height:'
        FlatSizedTextInput:
            id: input_h
            text: str(root.player.metadata_play.h) if root.player.metadata_play and root.player.metadata_play.h else ''
            background_color: app.theme.primary_light
            hint_text: 'height'
            on_text: root.player._set_metadata_play(pix_fmt.text if pix_fmt.text != '---' else '', int(input_w.text or 0), int(input_h.text or 0))
            size_hint_min_x: '60dp'
            padding: 0

