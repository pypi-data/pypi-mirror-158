<!--
  Initial Jinja2 template for generating browser-based reports for SiliconCompiler job runs.

  Currently, the generated page contains two tabular options for displaying the recorded metrics.
  There is also a placeholder for an interactive signoff checklist, but the 'schema_checklist'
  method does not yet contain concrete signoff criteria in the demo ASIC flows.
-->

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>SiliconCompiler Manifest Viewer</title>

    <style>
      {% include 'bootstrap.min.css' %}
    </style>

    <style>
      /* Styles related to manifest tree view.
      Source: https://stackoverflow.com/a/36297446
      */

      ul.tree li {
          list-style-type: none;
          position: relative;
      }

      ul.tree li ul {
          display: none;
      }

      ul.tree li.open > ul {
          display: block;
      }

      ul.tree li a {
          color: black;
          text-decoration: none;
      }

      ul.tree li a:before {
          height: 1em;
          padding:0 .1em;
          font-size: .8em;
          display: block;
          position: absolute;
          left: -1.3em;
          top: .2em;
      }

      ul.tree li > a:not(:last-child):before {
          content: '+';
      }

      ul.tree li.open > a:not(:last-child):before {
          content: '-';
      }
    </style>

    <script type="text/javascript">
      // Helper method to download the current manifest as a .json file.
      // Creates a virtual 'a' tag and sends it a click event to download the data as a file.
      const saveTemplateAsFile = (filename, dataObjToWrite) => {
        const blob = new Blob([JSON.stringify(dataObjToWrite)], { type: "text/json" });
        const link = document.createElement("a");

        link.download = filename;
        link.href = window.URL.createObjectURL(blob);
        link.dataset.downloadurl = ["text/json", link.download, link.href].join(":");

        const evt = new MouseEvent("click", {
          view: window,
          bubbles: true,
          cancelable: true,
        });

        link.dispatchEvent(evt);
        link.remove()
      };

      // Initialization function to setup buttons/links/etc after all DOM elements are lodaed.
      document.addEventListener("DOMContentLoaded", function() {
        // Foldable manifest tree logic.
        // Source: https://stackoverflow.com/a/36297446.
        var tree = document.querySelectorAll('ul.tree a:not(:last-child)');
        for(var i = 0; i < tree.length; i++){
            tree[i].addEventListener('click', function(e) {
                var parent = e.target.parentElement;
                var classList = parent.classList;
                if(classList.contains("open")) {
                    classList.remove('open');
                    var opensubs = parent.querySelectorAll(':scope .open');
                    for(var i = 0; i < opensubs.length; i++){
                        opensubs[i].classList.remove('open');
                    }
                } else {
                    classList.add('open');
                }
            });
        }

        // Initialize the JSON manifest. TODO: There should probably be a 'file upload' option too
        var cur_manifest = {{ manifest|tojson|safe }};

        // Setup the 'download manifest' button.
        var download_btn = document.getElementById("download_manifest_btn");
        download_btn.addEventListener('click', () => {
          saveTemplateAsFile('{{ manifest["design"]["value"] }}.json', cur_manifest);
        });

        // Setup links in the metrics tables. Each metric is associated with at least one log file.
        {% for mk in metric_keys %}
          {% for step in tasks %}
            {% for index in tasks[step] %}
              {% set report = manifest['tool'][manifest['flowgraph'][manifest['option']['flow']['value']][step][index]['tool']['value']]['report'] %}
              {% if (step in report) and (index in report[step]) and (mk in report[step][index]) %}
                var sim_log_btn = document.getElementById("{{ step }}{{ index }}_{{ mk }}_metlink");
                sim_log_btn.addEventListener('click', () => {
                  // TODO: clean up... >_>
                  log_link = "{{ step }}/{{ index }}/{{ manifest['tool'][manifest['flowgraph'][manifest['option']['flow']['value']][step][index]['tool']['value']]['report'][step][index][mk]['value'][0] }}";
                  window.open(log_link, "_blank");
                });
                var sim_log_btn = document.getElementById("{{ step }}{{ index }}_{{ mk }}_ddmetlink");
                sim_log_btn.addEventListener('click', () => {
                  // TODO: clean up... >_>
                  log_link = "{{ step }}/{{ index }}/{{ manifest['tool'][manifest['flowgraph'][manifest['option']['flow']['value']][step][index]['tool']['value']]['report'][step][index][mk]['value'][0] }}";
                  window.open(log_link, "_blank");
                });
              {% endif %}
            {% endfor %}
          {% endfor %}
        {% endfor %}
      });
    </script>
  </head>

  <body>
    <script>
      {% include 'bootstrap.min.js' %}
    </script>

    <span style="width: 33%; float: left;>
      {% if img_data %}
        <div style="text-align: center; width: 100%;">
          <h2>GDS Preview</h2>
          <img src="data:image/jpeg;base64,{{img_data}}" class="rounded mx-auto d-block" style="width: 100%;"></img>
        </div>
      {% endif %}

      <div style="text-align: center;"><a class="btn btn-primary" data-bs-toggle="collapse" href="#mqa_checklist_div", role="button", aria-controls="mqa_checklist_div" style="width:50%;">
        Toggle Checklist Mockup
      </a></div>
      <div id="mqa_checklist_div" class="collapse" style="text-align: center;">
        <h2>(Checklist Items go here)</h2>
        <button id="download_manifest_btn" class="btn btn-warning">Download Manifest</button>
      </div>
    </span>

    <span style="width: 67%; float: right; height: 100vh; overflow: scroll;">
      <div style="text-align: center;"><a class="btn btn-primary" data-bs-toggle="collapse" href="#metrics_table_div", role="button", aria-controls="metrics_table_div" style="width: 30%;">
        Toggle Metrics Table
      </a></div>

      <div id="metrics_table_div" class="collapse" style="text-align: center;">
        <h2>Full {{ manifest["design"]["value"] }} Metrics</h2>
        <table id="metrics_table" class="table table-dark table-striped table-bordered">
            <tr>
              <th>-</th>
              {% for step in tasks %}
                {% for index in tasks[step] %}
                  <th>{{ step }}{{ index }}</th>
                {% endfor %}
              {% endfor %}
            </tr>
            {% for mk in metric_keys %}
              <tr>
                <th>{{ mk }}</th>
                {% for step in tasks %}
                  {% for index in tasks[step] %}
                    {% if manifest['flowgraph'][manifest['option']['flow']['value']][step][index]['status']['value'] == 'error' %}
                      <td>(failed)</td>
                    {% elif step in manifest['tool'][manifest['flowgraph'][manifest['option']['flow']['value']][step][index]['tool']['value']]['report'] and mk in manifest['tool'][manifest['flowgraph'][manifest['option']['flow']['value']][step][index]['tool']['value']]['report'][step][index] %}
                      <td><a href="#" class="link-success" id="{{ step }}{{ index }}_{{ mk }}_metlink">{{ manifest["metric"][step][index][mk]["value"] }}</a></td>
                    {% else %}
                      <td>{{ manifest["metric"][step][index][mk]["value"] }}</td>
                    {% endif %}
                  {% endfor %}
                {% endfor %}
              </tr>
            {% endfor %}
        </table>
      </div>

      <div style="text-align: center;"><a class="btn btn-primary" data-bs-toggle="collapse" href="#metrics_dropdowns_div", role="button", aria-controls="metrics_dropdowns_div" style="width:30%;">
        Toggle Metrics Dropdowns
      </a></div>

      <div id="metrics_dropdowns_div" class="collapse" style="text-align: center;">
        <h2>Metrics for {{ manifest["design"]["value"] }} Tasks</h2>
        {% for step in tasks %}
          {% for index in tasks[step] %}
            <div>
              <a class="btn btn-success" data-bs-toggle="collapse" href="#{{ step }}{{ index }}_dropdown_div", role="button", aria-controls="{{ step }}{{ index }}_dropdown_div">
                Toggle {{ step }}{{ index }} Metrics
              </a>
            </div>
            <div id="{{ step }}{{ index }}_dropdown_div" class="collapse">
              <table id="{{ step }}{{ index }}_metrics_table" class="table table-dark table-striped table-bordered">
                <tr>
                  {% for mk in metric_keys %}
                    <th>{{ mk }}</th>
                  {% endfor %}
                </tr>
                <tr>
                  {% for mk in metric_keys %}
                    {% if manifest['flowgraph'][manifest['option']['flow']['value']][step][index]['status']['value'] == 'error' %}
                      <td>(failed)</td>
                    {% elif step in manifest['tool'][manifest['flowgraph'][manifest['option']['flow']['value']][step][index]['tool']['value']]['report'] and mk in manifest['tool'][manifest['flowgraph'][manifest['option']['flow']['value']][step][index]['tool']['value']]['report'][step][index] %}
                      <td><a href="#" class="link-success" id="{{ step }}{{ index }}_{{ mk }}_ddmetlink">{{ manifest["metric"][step][index][mk]["value"] }}</a></td>
                    {% else %}
                      <td>{{ manifest["metric"][step][index][mk]["value"] }}</td>
                    {% endif %}
                  {% endfor %}
                </tr>
              </table>
            </div>
          {% endfor %}
        {% endfor %}
      </div>

      <div style="text-align: center;"><a class="btn btn-primary" data-bs-toggle="collapse" href="#manifest_dropdown_div", role="button", aria-controls="manifest_dropdown_div" style="width:30%;">
        Toggle Manifest Dropdown
      </a></div>

      {% macro manifest_tree(cfg) %}
        {% for key in cfg.keys() | sort %}
          {% if 'value' not in cfg[key] and 'help' not in cfg[key] %}
            <li><a href="#">{{ key }}</a>
              <ul>
                {{ manifest_tree(cfg[key]) }}
              </ul>
            </li>
          {% elif 'value' in cfg[key] %}
            <li class="open"><a href="#">{{ key }}</a>
              <ul>
                <li>{{ cfg[key]['shorthelp'] }}</li>
                <li><b>Value:</b> {{ cfg[key]['value'] }}</li>
              </ul>
            </li>
          {% endif %}
        {% endfor %}
      {% endmacro %}

      <div id="manifest_dropdown_div" class="collapse" style="text-align: left;">
        <h2>Manifest</h2>
        <ul class="tree">
          {{ manifest_tree(pruned_cfg) }}
        </ul>
      </div>

    </span>
  </body>

</html>
